"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[575],{66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}},4396:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>o,data:()=>c});var e=a(20641);const t=a.p+"assets/img/image-20240225160621281.c0b51981.png",p=[(0,e.Fv)('<h1 id="五、-创建和管理表" tabindex="-1"><a class="header-anchor" href="#五、-创建和管理表"><span>五、 创建和管理表</span></a></h1><p>一个完整的数据存储过程总共有 4 步，分别是创建数据库、确认字段、创建数据表、插入数据。</p><figure><img src="'+t+'" alt="image-20240225160621281" tabindex="0" loading="lazy"><figcaption>image-20240225160621281</figcaption></figure><h2 id="_5-1-标识符命名规则" tabindex="-1"><a class="header-anchor" href="#_5-1-标识符命名规则"><span>5.1 标识符命名规则</span></a></h2><p>数据库名、表名不得超过30个字符，变量名限制为29个</p><p>必须只能包含 A–Z, a–z, 0–9, _共63个字符</p><p>数据库名、表名、字段名等对象名中间不要包含空格</p><p>同一个MySQL软件中，数据库不能同名；同一个库中，表不能重名；同一个表中，字段不能重名</p><p>必须保证你的字段没有和保留字、数据库系统或常用方法冲突。如果坚持使用，请在SQL语句中使 用`（着重号）引起来</p><p>保持字段名和类型的一致性：在命名字段并为其指定数据类型的时候一定要保证一致性，假如数据 类型在一个表里是整数，那在另一个表里可就别变成字符型了</p><h2 id="_5-2-创建和管理数据库" tabindex="-1"><a class="header-anchor" href="#_5-2-创建和管理数据库"><span>5.2 创建和管理数据库</span></a></h2><h3 id="_5-2-1-创建数据库" tabindex="-1"><a class="header-anchor" href="#_5-2-1-创建数据库"><span>5.2.1 创建数据库</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名<span class="token punctuation">;</span> \n<span class="token comment"># 创建数据库并指定字符集</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名 <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token string">&#39;字符集&#39;</span><span class="token punctuation">;</span>\n<span class="token comment"># 查看系统内使用的字符集</span>\n<span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&#39;CHARACTER_%&#39;</span> \n<span class="token comment"># 判断数据库是否已经存在，不存在则创建数据库</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> 数据库名<span class="token punctuation">;</span> \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-2-管理数据库" tabindex="-1"><a class="header-anchor" href="#_5-2-2-管理数据库"><span>5.2.2 管理数据库</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 查看所有的数据库</span>\n<span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span>\n\n<span class="token comment">-- 切换数据库</span>\n<span class="token keyword">USE</span> boot_gm\n\n<span class="token comment">-- 查看当前数据库中有哪些表</span>\n<span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span>\n\n<span class="token comment">-- 查看数据库的创建信息</span>\n<span class="token keyword">show</span> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> testdatabase\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 更改数据库字符集</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> testdatabase <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token string">&#39;utf8&#39;</span>\n<span class="token comment">-- 如果存在则删除数据库</span>\n<span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> 数据库名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-3-创建表" tabindex="-1"><a class="header-anchor" href="#_5-2-3-创建表"><span>5.2.3 创建表</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 创建方式一</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 表名<span class="token punctuation">(</span>\n字段<span class="token number">1</span><span class="token punctuation">,</span> 数据类型 <span class="token punctuation">[</span>约束条件<span class="token punctuation">]</span> <span class="token punctuation">[</span>默认值<span class="token punctuation">]</span><span class="token punctuation">,</span>\n字段<span class="token number">2</span><span class="token punctuation">,</span> 数据类型 <span class="token punctuation">[</span>约束条件<span class="token punctuation">]</span> <span class="token punctuation">[</span>默认值<span class="token punctuation">]</span><span class="token punctuation">,</span>\n字段<span class="token number">3</span><span class="token punctuation">,</span> 数据类型 <span class="token punctuation">[</span>约束条件<span class="token punctuation">]</span> <span class="token punctuation">[</span>默认值<span class="token punctuation">]</span><span class="token punctuation">,</span>\n ……\n <span class="token punctuation">[</span>表约束条件<span class="token punctuation">]</span>\n <span class="token punctuation">)</span><span class="token punctuation">;</span>\n \n <span class="token comment">-- 创建方式二</span>\n <span class="token comment">-- 基于 employees 表创建 dept80 新表。</span>\n <span class="token comment">-- 不仅会创建  employee_id, last_name,ANNSAL，hire_date 字段，还会将其值复制过去</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept80\n <span class="token keyword">AS</span> \n<span class="token keyword">SELECT</span>  employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> salary<span class="token operator">*</span><span class="token number">12</span> ANNSAL<span class="token punctuation">,</span> hire_date\n <span class="token keyword">FROM</span>    \nemployees\n <span class="token keyword">WHERE</span>   department_id <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>\n<span class="token comment">-- 如果不想要数据，可通过WHERE条件控制</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept80\n <span class="token keyword">AS</span> \n<span class="token keyword">SELECT</span>  employee_id<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> salary<span class="token operator">*</span><span class="token number">12</span> ANNSAL<span class="token punctuation">,</span> hire_date\n <span class="token keyword">FROM</span>    \nemployees\n <span class="token keyword">WHERE</span>   <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-4-修改表" tabindex="-1"><a class="header-anchor" href="#_5-2-4-修改表"><span>5.2.4 修改表</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 增加字段</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> 【<span class="token keyword">COLUMN</span>】  字段类型 <span class="token punctuation">;</span>\n<span class="token comment"># 修改字段数据类型、长度、默认值、位置的语法格式如下</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 【<span class="token keyword">COLUMN</span>】 字段类型 【<span class="token keyword">DEFAULT</span> 默认值】\n<span class="token comment"># 重命名字段</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 CHANGE 【<span class="token keyword">column</span>】 列名 新列名 新数据类型<span class="token punctuation">;</span>\n<span class="token comment"># 删除某个字段的语法格式</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> 【<span class="token keyword">COLUMN</span>】字段名\n<span class="token comment"># 重命名表</span>\n<span class="token keyword">RENAME</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">to</span> 新表名\n<span class="token comment"># 删除表</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 数据表<span class="token number">1</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> 数据表<span class="token number">2</span><span class="token punctuation">,</span> …<span class="token punctuation">,</span> 数据表n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment"># 清空表</span>\n<span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-5-truncate-与-delete-对比" tabindex="-1"><a class="header-anchor" href="#_5-2-5-truncate-与-delete-对比"><span>5.2.5 TRUNCATE 与 DELETE 对比</span></a></h3><p><strong>相同点</strong>：</p><p>都可以实现对表中的所有数据进行删除，同时保留表的结构</p><p><strong>不同点：</strong></p><p>DELETE 属于 DML 语句，执行操作后可以进行回滚(前提是提交前设置 SET autocommit = false)</p><p>TRUNCATE 属于 DDL 语句，执行操作后不可回滚</p><blockquote><p>TRUNCATE TABLE 比 DELETE 速度快，且使用的系统和事务日志资源少，但 TRUNCATE 无 事务且不触发 TRIGGER，有可能造成事故，故不建议在开发代码中使用此语句。</p></blockquote>',27)],l={},o=(0,a(66262).A)(l,[["render",function(n,s){return(0,e.uX)(),(0,e.CE)("div",null,p)}]]),c=JSON.parse('{"path":"/MySQL/05%E5%88%9B%E5%BB%BA%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8.html","title":"五、 创建和管理表","lang":"zh-CN","frontmatter":{"date":"2024-03-28T00:00:00.000Z","category":["数据库"],"tag":["数据库","MySQL"],"editLink":false,"pageview":false,"sticky":true,"star":true,"order":5,"description":"五、 创建和管理表 一个完整的数据存储过程总共有 4 步，分别是创建数据库、确认字段、创建数据表、插入数据。 image-20240225160621281image-20240225160621281 5.1 标识符命名规则 数据库名、表名不得超过30个字符，变量名限制为29个 必须只能包含 A–Z, a–z, 0–9, _共63个字符 数据库名、表...","head":[["meta",{"property":"og:url","content":"https://www.yzgc.top/MySQL/05%E5%88%9B%E5%BB%BA%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8.html"}],["meta",{"property":"og:site_name","content":"鲨瓜"}],["meta",{"property":"og:title","content":"五、 创建和管理表"}],["meta",{"property":"og:description","content":"五、 创建和管理表 一个完整的数据存储过程总共有 4 步，分别是创建数据库、确认字段、创建数据表、插入数据。 image-20240225160621281image-20240225160621281 5.1 标识符命名规则 数据库名、表名不得超过30个字符，变量名限制为29个 必须只能包含 A–Z, a–z, 0–9, _共63个字符 数据库名、表..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-05T05:35:13.000Z"}],["meta",{"property":"article:author","content":"鲨瓜"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2024-03-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-05T05:35:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"五、 创建和管理表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-05T05:35:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鲨瓜\\",\\"url\\":\\"https://www.yzgc.top\\"}]}"]]},"headers":[{"level":2,"title":"5.1 标识符命名规则","slug":"_5-1-标识符命名规则","link":"#_5-1-标识符命名规则","children":[]},{"level":2,"title":"5.2 创建和管理数据库","slug":"_5-2-创建和管理数据库","link":"#_5-2-创建和管理数据库","children":[{"level":3,"title":"5.2.1 创建数据库","slug":"_5-2-1-创建数据库","link":"#_5-2-1-创建数据库","children":[]},{"level":3,"title":"5.2.2 管理数据库","slug":"_5-2-2-管理数据库","link":"#_5-2-2-管理数据库","children":[]},{"level":3,"title":"5.2.3 创建表","slug":"_5-2-3-创建表","link":"#_5-2-3-创建表","children":[]},{"level":3,"title":"5.2.4 修改表","slug":"_5-2-4-修改表","link":"#_5-2-4-修改表","children":[]},{"level":3,"title":"5.2.5 TRUNCATE 与 DELETE 对比","slug":"_5-2-5-truncate-与-delete-对比","link":"#_5-2-5-truncate-与-delete-对比","children":[]}]}],"git":{"createdTime":1712295313000,"updatedTime":1712295313000,"contributors":[{"name":"“杨照光”","email":"“yangzhaoguang@ciictec.com”","commits":1}]},"readingTime":{"minutes":3.01,"words":903},"filePathRelative":"MySQL/05创建和管理表.md","localizedDate":"2024年3月28日","excerpt":"\\n<p>一个完整的数据存储过程总共有 4 步，分别是创建数据库、确认字段、创建数据表、插入数据。</p>\\n<figure><figcaption>image-20240225160621281</figcaption></figure>\\n<h2>5.1 标识符命名规则</h2>\\n<p>数据库名、表名不得超过30个字符，变量名限制为29个</p>\\n<p>必须只能包含 A–Z, a–z, 0–9, _共63个字符</p>\\n<p>数据库名、表名、字段名等对象名中间不要包含空格</p>\\n<p>同一个MySQL软件中，数据库不能同名；同一个库中，表不能重名；同一个表中，字段不能重名</p>\\n<p>必须保证你的字段没有和保留字、数据库系统或常用方法冲突。如果坚持使用，请在SQL语句中使 用`（着重号）引起来</p>","autoDesc":true}')}}]);