"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[630],{6262:(e,t)=>{t.A=(e,t)=>{const a=e.__vccOpts||e;for(const[e,n]of t)a[e]=n;return a}},1059:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>o,data:()=>s});var n=a(641);const r=[(0,n.Fv)('<p>给你一个整数数组 <code>nums</code> 。如果任一值在数组中出现 <strong>至少两次</strong> ，返回 <code>true</code> ；如果数组中每个元素互不相同，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>输入：nums = [1,2,3,1]\n输出：true\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>输入：nums = [1,2,3,4]\n输出：false\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>输入：nums = [1,1,1,3,3,4,3,2,4,2]\n输出：true\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="思路分析" tabindex="-1"><a class="header-anchor" href="#思路分析"><span>思路分析</span></a></h3><p>题比较简单，实现思路也有很多。</p><ol><li>可以转换成一个 Set 集合，因为 set 集合是不重复的。通过对比转换前后的长度就可以得知是否重复</li><li>也可以先对数组进行排序，重复的肯定是相邻的俩个数，挨个比对判断就行了。</li><li>使用 Jdk8 中 的 Stream流，通过去重操作，然后收集去重后的数据，比对长度即可。</li></ol>',10)],i={},o=(0,a(6262).A)(i,[["render",function(e,t){return(0,n.uX)(),(0,n.CE)("div",null,r)}]]),s=JSON.parse('{"path":"/LeetCode/%E6%95%B0%E7%BB%84/217_%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0.html","title":"217 存在重复元素","lang":"zh-CN","frontmatter":{"date":"2024-03-28T00:00:00.000Z","category":["算法"],"tag":["数组"],"title":"217 存在重复元素","editLink":false,"pageview":false,"icon":"iconfont icon-array","description":"给你一个整数数组 nums 。如果任一值在数组中出现 至少两次 ，返回 true ；如果数组中每个元素互不相同，返回 false 。 示例 1： 示例 2： 示例 3： 思路分析 题比较简单，实现思路也有很多。 可以转换成一个 Set 集合，因为 set 集合是不重复的。通过对比转换前后的长度就可以得知是否重复 也可以先对数组进行排序，重复的肯定是相邻...","head":[["meta",{"property":"og:url","content":"https://www.yzgc.top/LeetCode/%E6%95%B0%E7%BB%84/217_%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0.html"}],["meta",{"property":"og:site_name","content":"鲨瓜"}],["meta",{"property":"og:title","content":"217 存在重复元素"}],["meta",{"property":"og:description","content":"给你一个整数数组 nums 。如果任一值在数组中出现 至少两次 ，返回 true ；如果数组中每个元素互不相同，返回 false 。 示例 1： 示例 2： 示例 3： 思路分析 题比较简单，实现思路也有很多。 可以转换成一个 Set 集合，因为 set 集合是不重复的。通过对比转换前后的长度就可以得知是否重复 也可以先对数组进行排序，重复的肯定是相邻..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-05T05:35:13.000Z"}],["meta",{"property":"article:author","content":"鲨瓜"}],["meta",{"property":"article:tag","content":"数组"}],["meta",{"property":"article:published_time","content":"2024-03-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-05T05:35:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"217 存在重复元素\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-05T05:35:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鲨瓜\\",\\"url\\":\\"https://www.yzgc.top\\"}]}"]]},"headers":[{"level":3,"title":"思路分析","slug":"思路分析","link":"#思路分析","children":[]}],"git":{"createdTime":1712295313000,"updatedTime":1712295313000,"contributors":[{"name":"“杨照光”","email":"“yangzhaoguang@ciictec.com”","commits":1}]},"readingTime":{"minutes":0.78,"words":235},"filePathRelative":"LeetCode/数组/217_存在重复元素.md","localizedDate":"2024年3月28日","excerpt":"<p>给你一个整数数组 <code>nums</code> 。如果任一值在数组中出现 <strong>至少两次</strong> ，返回 <code>true</code> ；如果数组中每个元素互不相同，返回 <code>false</code> 。</p>\\n<p><strong>示例 1：</strong></p>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>输入：nums = [1,2,3,1]\\n输出：true\\n</code></pre></div>","autoDesc":true}')}}]);