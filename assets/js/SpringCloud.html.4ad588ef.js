"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[9836],{66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}},1556:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>gs,data:()=>vs});var t=a(20641);const p=a.p+"assets/img/image-20240403150037397.9f58d7c4.png",e=a.p+"assets/img/image-20240403190803023.93dc46db.png",c=a.p+"assets/img/image-20240403150916271.cf59ae13.png",o=a.p+"assets/img/image-20240403151142511.9d236738.png",l=a.p+"assets/img/image-20240403151215573.712d02a3.png",i=a.p+"assets/img/image-20240403151239930.21281479.png",u=a.p+"assets/img/image-20240403151300525.1b5f0b42.png",k=a.p+"assets/img/image-20240403154635126.fc1f2352.png",d=a.p+"assets/img/image-20240403175504845.0da68085.png",r=a.p+"assets/img/image-20240403180158686.834f8489.png",g=a.p+"assets/img/image-20240403184340723.a767e72d.png",v=a.p+"assets/img/image-20240403190958476.2d7cb661.png",m=a.p+"assets/img/image-20240404085317620.61975c4a.png",b=a.p+"assets/img/image-20240404093343196.2cf90190.png",y=a.p+"assets/img/image-20240404094642750.41013b81.png",f=a.p+"assets/img/image-20240404095040744.443dce46.png",h=a.p+"assets/img/image-20240404095624490.155445dc.png",w=a.p+"assets/img/image-20240404153112431.a5146f9a.png",q=a.p+"assets/img/image-20240404161459754.df44a55d.png",I=a.p+"assets/img/image-20240404162958313.1c569b46.png",x=a.p+"assets/img/image-20240404163255634.8ebee1e0.png",C=a.p+"assets/img/image-20240404160254565.91ee4cc6.png",_=a.p+"assets/img/image-20240404160411124.93275393.png",R=a.p+"assets/img/image-20240404160450799.e5339f51.png",S=a.p+"assets/img/image-20240404165630286.828dc80b.png",j=a.p+"assets/img/image-20240404180225749.ec647589.png",T=a.p+"assets/img/image-20240404185845647.adcc0df4.png",P=a.p+"assets/img/image-20240404190229058.7a440d9b.png",L=a.p+"assets/img/image-20240404190854797.09d52085.png",E=a.p+"assets/img/image-20240404191738868.949da682.png",F=a.p+"assets/img/image-20240404193126160.732ebf96.png",M=a.p+"assets/img/image-20240404224526487.fbcce97b.png",O=a.p+"assets/img/image-20240404222812716.581d1e18.png",A=a.p+"assets/img/image-20240405154506118.d736e456.png",D=a.p+"assets/img/image-20240405160342750.54c7ce29.png",B=a.p+"assets/img/image-20240405170221197.e153ed83.png",N=a.p+"assets/img/image-20240405171318573.11b87199.png",z=a.p+"assets/img/image-20240405215124906.cb5dcf03.png",G=a.p+"assets/img/spring_cloud_gateway_diagram.24a8fc12.png",H=a.p+"assets/img/image-20240405220811768.a9cce681.png",U=a.p+"assets/img/image-20240406093526625.f272f91d.png",W=a.p+"assets/img/image-20240406102807150.3d0b403e.png",V=a.p+"assets/img/image-20240406110445918.8d9f770d.png",$=a.p+"assets/img/image-20240406110126338.5e1ff9db.png",X=a.p+"assets/img/image-20240406114040874.f7fbe0e9.png",J=a.p+"assets/img/image-20240406120715377.559f60de.png",K=a.p+"assets/img/image-20240406170813435.a62d7f33.png",Z=(0,t.Lk)("h1",{id:"springcloud",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#springcloud"},[(0,t.Lk)("span",null,"SpringCloud")])],-1),Y={class:"hint-container tip"},Q=(0,t.Lk)("p",{class:"hint-container-title"},"提示",-1),nn=(0,t.Lk)("p",null,"本文档只讲解微服务的基础使用,想要了解深层次的原理请跳过，避免耽误时间！！",-1),sn=(0,t.Lk)("p",null,"所有代码均在GitHub,需要请自取",-1),an={href:"https://github.com/yangzhaoguang/cloud2024.git",target:"_blank",rel:"noopener noreferrer"},tn=(0,t.Lk)("p",null,[(0,t.Lk)("strong",null,"目前常用的组件"),(0,t.eW)("：")],-1),pn=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:p,alt:"image-20240403150037397",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption",null,"image-20240403150037397")],-1),en=(0,t.Lk)("h2",{id:"一、搭建示例项目",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#一、搭建示例项目"},[(0,t.Lk)("span",null,"一、搭建示例项目")])],-1),cn={class:"hint-container note"},on=(0,t.Lk)("p",{class:"hint-container-title"},"注",-1),ln=(0,t.Lk)("code",null,"BASE CODE",-1),un={href:"https://github.com/yangzhaoguang/cloud2024.git",target:"_blank",rel:"noopener noreferrer"},kn=(0,t.Fv)('<p><strong>业务图</strong></p><p>模拟订单支付的简单业务</p><figure><img src="'+e+'" alt="image-20240403190803023" tabindex="0" loading="lazy"><figcaption>image-20240403190803023</figcaption></figure><blockquote><p>数据库表SQL</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>t_pay<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n\n \n\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>t_pay<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">UNSIGNED</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n\n  <span class="token identifier"><span class="token punctuation">`</span>pay_no<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;支付流水号&#39;</span><span class="token punctuation">,</span>\n\n  <span class="token identifier"><span class="token punctuation">`</span>order_no<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;订单流水号&#39;</span><span class="token punctuation">,</span>\n\n  <span class="token identifier"><span class="token punctuation">`</span>user_id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;用户账号ID&#39;</span><span class="token punctuation">,</span>\n\n  <span class="token identifier"><span class="token punctuation">`</span>amount<span class="token punctuation">`</span></span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;9.9&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;交易金额&#39;</span><span class="token punctuation">,</span>\n\n  <span class="token identifier"><span class="token punctuation">`</span>deleted<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">UNSIGNED</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;删除标志，默认0不删除，1删除&#39;</span><span class="token punctuation">,</span>\n\n  <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span> <span class="token keyword">TIMESTAMP</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>\n\n  <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span> <span class="token keyword">TIMESTAMP</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>\n\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;支付交易表&#39;</span><span class="token punctuation">;</span>\n\n \n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_pay<span class="token punctuation">(</span>pay_no<span class="token punctuation">,</span>order_no<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;pay17203699&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;6544bafb424a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n \n\n<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> t_pay<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1-环境搭建" tabindex="-1"><a class="header-anchor" href="#_1-1-环境搭建"><span>1.1 环境搭建</span></a></h3><p><strong>版本要求</strong></p><div class="hint-container important"><p class="hint-container-title">重要</p><p>由于Maven使用版本较高，可能需要将IDEA升级成2023（2022不知道行不行，反正2021不行~~）</p></div><figure><img src="'+c+'" alt="image-20240403150916271" tabindex="0" loading="lazy"><figcaption>image-20240403150916271</figcaption></figure><p><strong>搭建Maven父工程</strong></p><figure><img src="'+o+'" alt="image-20240403151142511" tabindex="0" loading="lazy"><figcaption>image-20240403151142511</figcaption></figure><p><strong>一些Setting</strong></p><p><strong>字符编码</strong></p><figure><img src="'+l+'" alt="image-20240403151215573" tabindex="0" loading="lazy"><figcaption>image-20240403151215573</figcaption></figure><p><strong>注解生效</strong></p><figure><img src="'+i+'" alt="image-20240403151239930" tabindex="0" loading="lazy"><figcaption>image-20240403151239930</figcaption></figure><p><strong>Java编译版本</strong></p><figure><img src="'+u+'" alt="image-20240403151300525" tabindex="0" loading="lazy"><figcaption>image-20240403151300525</figcaption></figure><p><strong>POM</strong></p><blockquote><p><strong>dependencyManagement 和 dependencies 的区别：</strong></p><p>dependencyManagement 是用来管理版本依赖版本号的 ，出现在父工程中 。所有的子项目都统一使用同一个版本号。 dependencyManagement 并不会引入 jar 包 ，而是声明 jar 包，真正引入 jar 应该在 子工程的 dependencies 下 ，而在子工程中不需要写另外的版本号，如果需要新的版本号在子工程中重新指明 version 即可 ！</p></blockquote><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.atguigu.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>cloud2024<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hutool.version</span><span class="token punctuation">&gt;</span></span>5.8.22<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hutool.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lombok.version</span><span class="token punctuation">&gt;</span></span>1.18.26<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lombok.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>druid.version</span><span class="token punctuation">&gt;</span></span>1.1.20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>druid.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mybatis.springboot.version</span><span class="token punctuation">&gt;</span></span>3.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mybatis.springboot.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mysql.version</span><span class="token punctuation">&gt;</span></span>8.0.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mysql.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>swagger3.version</span><span class="token punctuation">&gt;</span></span>2.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>swagger3.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper.version</span><span class="token punctuation">&gt;</span></span>4.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fastjson2.version</span><span class="token punctuation">&gt;</span></span>2.0.40<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fastjson2.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>persistence-api.version</span><span class="token punctuation">&gt;</span></span>1.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>persistence-api.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.boot.test.version</span><span class="token punctuation">&gt;</span></span>3.1.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.boot.test.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.boot.version</span><span class="token punctuation">&gt;</span></span>3.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.boot.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.cloud.version</span><span class="token punctuation">&gt;</span></span>2023.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.cloud.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.cloud.alibaba.version</span><span class="token punctuation">&gt;</span></span>2022.0.0.0-RC2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.cloud.alibaba.version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--springboot 3.2.0--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--springcloud 2023.0.0--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.cloud.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--springcloud alibaba 2022.0.0.0-RC2--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.cloud.alibaba.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--SpringBoot集成mybatis--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${mybatis.springboot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--Mysql数据库驱动8 --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${mysql.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--SpringBoot集成druid连接池--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${druid.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--通用Mapper4之tk.mybatis--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>tk.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mapper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${mapper.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--persistence--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.persistence<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>persistence-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${persistence-api.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!-- fastjson2 --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${fastjson2.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!-- swagger3 调用方式 http://你的主机IP地址:5555/swagger-ui/index.html --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springdoc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springdoc-openapi-starter-webmvc-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${swagger3.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--hutool--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.hutool<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hutool-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${hutool.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--lombok--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${lombok.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!-- spring-boot-starter-test --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.boot.test.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-mapper4一键生成" tabindex="-1"><a class="header-anchor" href="#_1-2-mapper4一键生成"><span>1.2 Mapper4一键生成</span></a></h3>',22),dn={href:"https://github.com/abel533/Mapper",target:"_blank",rel:"noopener noreferrer"},rn=(0,t.Fv)('<p>创建一个名称为 <code>mybatis_generator2024</code> 的Maven工程</p><figure><img src="'+k+'" alt="image-20240403154635126" tabindex="0" loading="lazy"><figcaption>image-20240403154635126</figcaption></figure><p>引入 <code>POM</code>：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--Mybatis 通用mapper tk单独使用，自己独有+自带版本号--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.13<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- Mybatis Generator 自己独有+自带版本号--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-generator-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.4.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--通用Mapper--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>tk.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mapper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--mysql8.0--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--persistence--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.persistence<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>persistence-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--hutool--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.hutool<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hutool-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--lombok--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.junit.vintage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit-vintage-engine<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>${basedir}/src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>${basedir}/src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">&gt;</span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-generator-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.4.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configurationFile</span><span class="token punctuation">&gt;</span></span>${basedir}/src/main/resources/generatorConfig.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configurationFile</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>overwrite</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>overwrite</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>verbose</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>verbose</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.0.33<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>tk.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mapper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>创建配置文件</strong></p><p><strong>properties</strong>：</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment">#t_pay表包名</span>\n<span class="token key attr-name">package.name</span><span class="token punctuation">=</span><span class="token value attr-value">com.atguigu.cloud</span>\n\n<span class="token comment"># mysql8.0</span>\n<span class="token key attr-name">jdbc.driverClass</span> <span class="token punctuation">=</span> <span class="token value attr-value">com.mysql.cj.jdbc.Driver</span>\n<span class="token key attr-name">jdbc.url</span><span class="token punctuation">=</span> <span class="token value attr-value">jdbc:mysql://localhost:3306/cloud2024?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT%2B8&amp;rewriteBatchedStatements=true&amp;allowPublicKeyRetrieval=true</span>\n<span class="token key attr-name">jdbc.user</span> <span class="token punctuation">=</span> <span class="token value attr-value">root</span>\n<span class="token key attr-name">jdbc.password</span> <span class="token punctuation">=</span><span class="token value attr-value">root</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>generatorConfig.xml</strong></p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">generatorConfiguration</span>\n        <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span>\n        <span class="token string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generatorConfiguration</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>config.properties<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Mysql<span class="token punctuation">&quot;</span></span> <span class="token attr-name">targetRuntime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MyBatis3Simple<span class="token punctuation">&quot;</span></span> <span class="token attr-name">defaultModelType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flat<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>beginningDelimiter<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>`<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>endingDelimiter<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>`<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tk.mybatis.mapper.generator.MapperPlugin<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mappers<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tk.mybatis.mapper.common.Mapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>caseSensitive<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdbcConnection</span> <span class="token attr-name">driverClass</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${jdbc.driverClass}<span class="token punctuation">&quot;</span></span>\n                        <span class="token attr-name">connectionURL</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${jdbc.url}<span class="token punctuation">&quot;</span></span>\n                        <span class="token attr-name">userId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${jdbc.user}<span class="token punctuation">&quot;</span></span>\n                        <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${jdbc.password}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdbcConnection</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token comment">&lt;!--包名--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaModelGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${package.name}.entities<span class="token punctuation">&quot;</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>src/main/java<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sqlMapGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${package.name}.mapper<span class="token punctuation">&quot;</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>src/main/java<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaClientGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${package.name}.mapper<span class="token punctuation">&quot;</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>src/main/java<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>XMLMAPPER<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n\n        <span class="token comment">&lt;!--表名以及对应的实体类--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t_pay<span class="token punctuation">&quot;</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Pay<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generatedKey</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">sqlStatement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>JDBC<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>generatorConfiguration</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>一切就绪之后，双击插件即可</strong>：</p><figure><img src="'+d+'" alt="image-20240403175504845" tabindex="0" loading="lazy"><figcaption>image-20240403175504845</figcaption></figure><h3 id="_1-3-新建支付模块" tabindex="-1"><a class="header-anchor" href="#_1-3-新建支付模块"><span>1.3 新建支付模块</span></a></h3><p><strong>新建一个支付模块</strong></p><figure><img src="'+r+'" alt="image-20240403180158686" tabindex="0" loading="lazy"><figcaption>image-20240403180158686</figcaption></figure><p><strong>POM</strong></p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--SpringBoot通用依赖模块--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--SpringBoot集成druid连接池--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- Swagger3 调用方式 http://你的主机IP地址:5555/swagger-ui/index.html --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springdoc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springdoc-openapi-starter-webmvc-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--mybatis和springboot整合--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--Mysql数据库驱动8 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--persistence--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.persistence<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>persistence-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--通用Mapper4--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>tk.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mapper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--hutool--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.hutool<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hutool-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- fastjson2 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--lombok--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--test--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yaml配置文件</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>\n    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8001</span>\n\n<span class="token comment"># ==========applicationName + druid-mysql8 driver===================</span>\n<span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">application</span><span class="token punctuation">:</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service\n    \n    <span class="token key atrule">datasource</span><span class="token punctuation">:</span>\n        <span class="token key atrule">type</span><span class="token punctuation">:</span> com.alibaba.druid.pool.DruidDataSource\n        <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver\n        <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/cloud2024<span class="token punctuation">?</span>characterEncoding=utf8<span class="token important">&amp;useSSL=false&amp;serverTimezone=GMT%2B8&amp;rewriteBatchedStatements=true&amp;allowPublicKeyRetrieval=true</span>\n        <span class="token key atrule">username</span><span class="token punctuation">:</span> root\n        <span class="token key atrule">password</span><span class="token punctuation">:</span> root\n\n<span class="token comment"># ========================mybatis===================</span>\n<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>\n    <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mapper/<span class="token important">*.xml</span>\n    <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> com.atguigu.cloud.entities\n    <span class="token key atrule">configuration</span><span class="token punctuation">:</span>\n        <span class="token key atrule">map-underscore-to-camel-case</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>PayService</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PayService</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Pay</span> pay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Pay</span> pay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Pay</span>   <span class="token function">getById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Pay</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>PayServiceImpl</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">PayService</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Resource</span>\n    <span class="token class-name">PayMapper</span> payMapper<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Pay</span> pay<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> payMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>pay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> payMapper<span class="token punctuation">.</span><span class="token function">deleteByPrimaryKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Pay</span> pay<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> payMapper<span class="token punctuation">.</span><span class="token function">updateByPrimaryKeySelective</span><span class="token punctuation">(</span>pay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">Pay</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> payMapper<span class="token punctuation">.</span><span class="token function">selectByPrimaryKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Pay</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> payMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>PayController</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayController</span><span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Resource</span>\n    <span class="token class-name">PayService</span> payService<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/pay/add&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">addPay</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Pay</span> pay<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pay<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> i <span class="token operator">=</span> payService<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;成功插入记录，返回值：&quot;</span><span class="token operator">+</span>i<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/pay/del/{id}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">deletePay</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> payService<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/pay/update&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">updatePay</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">PayDTO</span> payDTO<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Pay</span> pay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>payDTO<span class="token punctuation">,</span> pay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">int</span> i <span class="token operator">=</span> payService<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>pay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;成功修改记录，返回值：&quot;</span><span class="token operator">+</span>i<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/pay/get/{id}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Pay</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> payService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token comment">//全部查询getall作为家庭作业</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>主启动类</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.atguigu.cloud.mapper&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main8001</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Main8001</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>PayDTO</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>\n<span class="token annotation punctuation">@AllArgsConstructor</span>\n<span class="token annotation punctuation">@NoArgsConstructor</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayDTO</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>\n    <span class="token comment">//支付流水号</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> payNo<span class="token punctuation">;</span>\n    <span class="token comment">//订单流水号</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> orderNo<span class="token punctuation">;</span>\n    <span class="token comment">//用户账号ID</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> userId<span class="token punctuation">;</span>\n    <span class="token comment">//交易金额</span>\n    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>将mybatis_generator2024中生成的 mapper、entity拷贝到此模块！</p><p>最后使用postman、Swagger测试</p></blockquote><h3 id="_1-4-解决时间格式、同一返回结果" tabindex="-1"><a class="header-anchor" href="#_1-4-解决时间格式、同一返回结果"><span>1.4 解决时间格式、同一返回结果</span></a></h3><p><strong>时间格式修改</strong></p><ul><li>修改yaml</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>    \n    <span class="token key atrule">jackson</span><span class="token punctuation">:</span>\n        <span class="token key atrule">date-format</span><span class="token punctuation">:</span> yyyy<span class="token punctuation">-</span>MM<span class="token punctuation">-</span>dd HH<span class="token punctuation">:</span>mm<span class="token punctuation">:</span>ss\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>指定字段上使用注解</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;update_time&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">,</span> timezone <span class="token operator">=</span> <span class="token string">&quot;GMT+8&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">Date</span> updateTime<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;create_time&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">,</span> timezone <span class="token operator">=</span> <span class="token string">&quot;GMT+8&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">Date</span> createTime<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>统一返回结果</strong></p><p>通用HTTP返回状态码：</p><figure><img src="'+g+'" alt="image-20240403184340723" tabindex="0" loading="lazy"><figcaption>image-20240403184340723</figcaption></figure><p><strong>枚举类</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Getter</span>\n<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">ReturnCodeEnum</span>\n<span class="token punctuation">{</span>\n    <span class="token doc-comment comment">/**操作失败**/</span>\n    <span class="token function">RC999</span><span class="token punctuation">(</span><span class="token string">&quot;999&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;操作XXX失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token doc-comment comment">/**操作成功**/</span>\n    <span class="token function">RC200</span><span class="token punctuation">(</span><span class="token string">&quot;200&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token doc-comment comment">/**服务降级**/</span>\n    <span class="token function">RC201</span><span class="token punctuation">(</span><span class="token string">&quot;201&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;服务开启降级保护,请稍后再试!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token doc-comment comment">/**热点参数限流**/</span>\n    <span class="token function">RC202</span><span class="token punctuation">(</span><span class="token string">&quot;202&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;热点参数限流,请稍后再试!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token doc-comment comment">/**系统规则不满足**/</span>\n    <span class="token function">RC203</span><span class="token punctuation">(</span><span class="token string">&quot;203&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;系统规则不满足要求,请稍后再试!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token doc-comment comment">/**授权规则不通过**/</span>\n    <span class="token function">RC204</span><span class="token punctuation">(</span><span class="token string">&quot;204&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;授权规则不通过,请稍后再试!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token doc-comment comment">/**access_denied**/</span>\n    <span class="token function">RC403</span><span class="token punctuation">(</span><span class="token string">&quot;403&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;无访问权限,请联系管理员授予权限&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token doc-comment comment">/**access_denied**/</span>\n    <span class="token function">RC401</span><span class="token punctuation">(</span><span class="token string">&quot;401&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;匿名用户访问无权限资源时的异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">RC404</span><span class="token punctuation">(</span><span class="token string">&quot;404&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;404页面找不到的异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token doc-comment comment">/**服务异常**/</span>\n    <span class="token function">RC500</span><span class="token punctuation">(</span><span class="token string">&quot;500&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;系统异常，请稍后重试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">RC375</span><span class="token punctuation">(</span><span class="token string">&quot;375&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;数学运算异常，请稍后重试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n    <span class="token function">INVALID_TOKEN</span><span class="token punctuation">(</span><span class="token string">&quot;2001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;访问令牌不合法&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">ACCESS_DENIED</span><span class="token punctuation">(</span><span class="token string">&quot;2003&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;没有权限访问该资源&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">CLIENT_AUTHENTICATION_FAILED</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;客户端认证失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">USERNAME_OR_PASSWORD_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;1002&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;用户名或密码错误&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">BUSINESS_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;1004&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;业务逻辑异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">UNSUPPORTED_GRANT_TYPE</span><span class="token punctuation">(</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;不支持的认证模式&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**自定义状态码**/</span>\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**自定义描述**/</span>\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> message<span class="token punctuation">;</span>\n\n    <span class="token class-name">ReturnCodeEnum</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> message<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//遍历枚举V1</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ReturnCodeEnum</span> <span class="token function">getReturnCodeEnum</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ReturnCodeEnum</span> element <span class="token operator">:</span> <span class="token class-name">ReturnCodeEnum</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> element<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">//遍历枚举V2</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ReturnCodeEnum</span> <span class="token function">getReturnCodeEnumV2</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token class-name">ReturnCodeEnum</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token comment">/*public static void main(String[] args)\n    {\n        System.out.println(getReturnCodeEnumV2(&quot;200&quot;));\n        System.out.println(getReturnCodeEnumV2(&quot;200&quot;).getCode());\n        System.out.println(getReturnCodeEnumV2(&quot;200&quot;).getMessage());\n    }*/</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>统一返回结果</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>\n<span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResultData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span><span class="token doc-comment comment">/** 结果状态 ,具体状态码参见枚举类ReturnCodeEnum.java*/</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> message<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">T</span> data<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">long</span> timestamp <span class="token punctuation">;</span>\n\n\n    <span class="token keyword">public</span> <span class="token class-name">ResultData</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>timestamp <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ResultData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">ResultData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token class-name">ReturnCodeEnum</span><span class="token punctuation">.</span><span class="token constant">RC200</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        resultData<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token class-name">ReturnCodeEnum</span><span class="token punctuation">.</span><span class="token constant">RC200</span><span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ResultData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">ResultData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        resultData<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-全局异常处理" tabindex="-1"><a class="header-anchor" href="#_1-5-全局异常处理"><span>1.5 全局异常处理</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>\n<span class="token annotation punctuation">@RestControllerAdvice</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span>\n<span class="token punctuation">{</span>\n    <span class="token doc-comment comment">/**\n     * 默认全局异常处理。\n     * <span class="token keyword">@param</span> <span class="token parameter">e</span> the e\n     * <span class="token keyword">@return</span> ResultData\n     */</span>\n    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">RuntimeException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@ResponseStatus</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">INTERNAL_SERVER_ERROR</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">ResultData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">exception</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----come in GlobalExceptionHandler&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;全局异常信息exception:{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token class-name">ResultData</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">ReturnCodeEnum</span><span class="token punctuation">.</span><span class="token constant">RC500</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-6-新建订单模块" tabindex="-1"><a class="header-anchor" href="#_1-6-新建订单模块"><span>1.6 新建订单模块</span></a></h3><figure><img src="'+v+'" alt="image-20240403190958476" tabindex="0" loading="lazy"><figcaption>image-20240403190958476</figcaption></figure><p><strong>POM</strong></p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--web + actuator--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--lombok--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--hutool-all--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.hutool<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hutool-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--fastjson2--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- swagger3 调用方式 http://你的主机IP地址:5555/swagger-ui/index.html --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springdoc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springdoc-openapi-starter-webmvc-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yaml</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>\n    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>主启动类</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main80</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Main80</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>由于订单模块需要调用支付模块，在未使用微服务之前，暂时通过 RESTTemplate 调用：</p></blockquote><p><strong>配置类</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main80</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Main80</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Controller</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderController</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">PaymentSrv_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://localhost:8001&quot;</span><span class="token punctuation">;</span><span class="token comment">//先写死，硬编码</span>\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * 一般情况下，通过浏览器的地址栏输入url，发送的只能是get请求\n     * 我们底层调用的是post方法，模拟消费者发送get请求，客户端消费者\n     * 参数可以不添加@RequestBody\n     * <span class="token keyword">@param</span> <span class="token parameter">payDTO</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/consumer/pay/add&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">ResultData</span> <span class="token function">addOrder</span><span class="token punctuation">(</span><span class="token class-name">PayDTO</span> payDTO<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span><span class="token class-name">PaymentSrv_URL</span> <span class="token operator">+</span> <span class="token string">&quot;/pay/add&quot;</span><span class="token punctuation">,</span>payDTO<span class="token punctuation">,</span><span class="token class-name">ResultData</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 删除+修改操作作为家庭作业，O(∩_∩)O。。。。。。。</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/consumer/pay/get/{id}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">ResultData</span> <span class="token function">getPayInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token class-name">PaymentSrv_URL</span> <span class="token operator">+</span> <span class="token string">&quot;/pay/get/&quot;</span><span class="token operator">+</span>id<span class="token punctuation">,</span> <span class="token class-name">ResultData</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-7-目前项目存在的问题" tabindex="-1"><a class="header-anchor" href="#_1-7-目前项目存在的问题"><span>1.7 目前项目存在的问题</span></a></h3><p>项目中有大量重复的代码，类，通常在开发中，会将<code>共同的类</code>都存放在另一个模块下</p><p>因此我们重新创建一个 <code>cloud-api-commons</code> 模块，用来存放公共的类！</p><figure><img src="'+m+'" alt="image-20240404085317620" tabindex="0" loading="lazy"><figcaption>image-20240404085317620</figcaption></figure><details class="hint-container details"><summary>上面的Controller中，我们使用 RESTTemplate调用 支付接口，这样有什么问题？</summary><p>1、如果订单微服务和支付微服务的IP地址或者端口号发生了变化，则需要重新修改</p><p>2、如果系统中提供了多个订单微服务和支付微服务，则无法实现微服务的负载均衡功能</p><p>3、如果系统需要支持更高的并发，需要部署更多的订单微服务和支付微服务，硬编码订单微服务则后续的维护会变得异常复杂</p><p>因此，就下来就学习 微服务！！</p></details><h2 id="二、consul" tabindex="-1"><a class="header-anchor" href="#二、consul"><span>二、Consul</span></a></h2><h3 id="_2-1-介绍、安装" tabindex="-1"><a class="header-anchor" href="#_2-1-介绍、安装"><span>2.1 介绍、安装</span></a></h3><p>Consul 是一套开源的分<code>布式服务发现</code>和 <code>配置管理系统</code>，由 HashiCorp 公司用 Go 语言开发。</p><p>提供了微服务系统中的<code>服务治理、配置中心、控制总线</code>等功能。这些功能中的每一个都可以根据需要单独使用，也可以一起使用以构建全方位的服务网格，总之Consul提供了一种完整的服务网格解决方案。</p><p><strong>功能</strong></p><ul><li><p>服务发现 ： 提供 HTTP 和 DNS 俩中发现方式</p></li><li><p>健康检测：支持多种方式，HTTP、TCP</p></li><li><p>KV 存储：Key、Value 的存储方式</p></li><li><p>多数据中心</p></li><li><p>可视化 Web 界面</p></li></ul>',68),gn={class:"hint-container details"},vn=(0,t.Lk)("summary",null,"下载",-1),mn={href:"https://www.consul.io/downloads.html",target:"_blank",rel:"noopener noreferrer"},bn=(0,t.Fv)('<p>下载后只有一个 exe 文件，使用 cmd 命令行查看 consul 版本信息：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>consul <span class="token parameter variable">-version</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用开发者模式启动：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>consul agent <span class="token parameter variable">-dev</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>访问 web 管理界面：</p>',5),yn={href:"http://localhost:8500",target:"_blank",rel:"noopener noreferrer"},fn=(0,t.Fv)('<h3 id="_2-2-服务注册" tabindex="-1"><a class="header-anchor" href="#_2-2-服务注册"><span>2.2 服务注册</span></a></h3><p><strong>POM增加依赖</strong></p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-consul-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>配置</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">application</span><span class="token punctuation">:</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n        <span class="token key atrule">consul</span><span class="token punctuation">:</span>\n            <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost\n            <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8500</span>\n            <span class="token key atrule">discovery</span><span class="token punctuation">:</span>\n                <span class="token key atrule">service-name</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span> <span class="token comment"># 服务名</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主启动类增加 <code>@EnableDiscoveryClient</code> 注解！</p><p><strong>启动报错</strong></p><figure><img src="'+b+'" alt="image-20240404093343196" tabindex="0" loading="lazy"><figcaption>image-20240404093343196</figcaption></figure><p>与 <code>commons-logging</code> 包冲突，需要在依赖中排除</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-consul-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-小问题" tabindex="-1"><a class="header-anchor" href="#_2-3-小问题"><span>2.3 小问题</span></a></h3><p>此时已经将俩个模块注册到 Consul 中，在 <code>OrderController </code>中就可以使用 <code>服务名</code> 替代具体的 IP地址了</p><figure><img src="'+y+'" alt="image-20240404094642750" tabindex="0" loading="lazy"><figcaption>image-20240404094642750</figcaption></figure><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">PaymentSrv_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://cloud-payment-service&quot;</span><span class="token punctuation">;</span><span class="token comment">//服务注册中心上的微服务名称</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时访问 <code>http://localhost:80/consumer/pay/get/1</code> 报错，</p><figure><img src="'+f+'" alt="image-20240404095040744" tabindex="0" loading="lazy"><figcaption>image-20240404095040744</figcaption></figure><p>这是因为 Consul 天生支持负载均衡，默认有多个<code>cloud-payment-service</code>，需要配置负载均衡，在 <code>RestTemplate</code> 方法上增加 <code>@LoadBalanced</code> 注解</p><figure><img src="'+h+'" alt="image-20240404095624490" tabindex="0" loading="lazy"><figcaption>image-20240404095624490</figcaption></figure><h3 id="_2-4-分布式配置" tabindex="-1"><a class="header-anchor" href="#_2-4-分布式配置"><span>2.4 分布式配置</span></a></h3><p>由于每个服务都需要必要的配置信息才能运行，所以一套<code>集中式的、动态的配置</code>管理设施是必不可少的。比如某些配置文件中的内容大部分都是相同的，只有个别的配置项不同。就拿数据库配置来说吧，如果每个微服务使用的技术栈都是相同的，则每个微服务中关于数据库的配置几乎都是相同的，有时候主机迁移了，我希望<code>一次修改，处处生效</code>。</p><blockquote><p>在 Consul 中提供了 <code>分布式配置</code> 的功能，下面看看如何使用！</p></blockquote><p><strong>Consul 配置规则</strong></p><p>默认是 <code>config/应用名,环境/data</code> ，默认读取<code>data </code>配置文件</p><blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>config/application,dev/data\nconfig/application/data\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>分隔符可通过: <code>spring.cloud.consul.config.profile-separator </code> 设置</p><p>读取的配置文件可以通过: <code>spring.cloud.consul.config.data-key </code> 配置</p><p>1、引入依赖</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>        <span class="token comment">&lt;!--SpringCloud consul config--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-consul-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-bootstrap<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、新增 <code>bootstrap.yaml </code>配置文件</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">application</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service\n    <span class="token comment">####Spring Cloud Consul for Service Discovery</span>\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">consul</span><span class="token punctuation">:</span>\n      <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost\n      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8500</span>\n      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>\n        <span class="token key atrule">service-name</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span>\n      <span class="token key atrule">config</span><span class="token punctuation">:</span>\n        <span class="token key atrule">profile-separator</span><span class="token punctuation">:</span> <span class="token string">&#39;-&#39;</span> <span class="token comment"># default value is &quot;,&quot;，we update &#39;-&#39;</span>\n        <span class="token key atrule">format</span><span class="token punctuation">:</span> YAML\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、<code>application.yaml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>\n    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8001</span>\n\n<span class="token comment"># ==========applicationName + druid-mysql8 driver===================</span>\n<span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">datasource</span><span class="token punctuation">:</span>\n        <span class="token key atrule">type</span><span class="token punctuation">:</span> com.alibaba.druid.pool.DruidDataSource\n        <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver\n        <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/cloud2024<span class="token punctuation">?</span>characterEncoding=utf8<span class="token important">&amp;useSSL=false&amp;serverTimezone=GMT%2B8&amp;rewriteBatchedStatements=true&amp;allowPublicKeyRetrieval=true</span>\n        <span class="token key atrule">username</span><span class="token punctuation">:</span> root\n        <span class="token key atrule">password</span><span class="token punctuation">:</span> root\n\n\n<span class="token comment"># ========================mybatis===================</span>\n<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>\n    <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mapper/<span class="token important">*.xml</span>\n    <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> com.atguigu.cloud.entities\n    <span class="token key atrule">configuration</span><span class="token punctuation">:</span>\n        <span class="token key atrule">map-underscore-to-camel-case</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>applicaiton.yml是用户级的资源配置项</p><p>bootstrap.yml是系统级的，优先级更加高</p></blockquote><p>4、在 Consul 中创建配置文件，一定要符合 规则</p><p>一共有三层：</p><ul><li><p>第一层为 <code>config/</code></p></li><li><p>第二层为：<code>应用名-环境/</code></p></li><li><p>第三层为 <code>data配置文件</code></p></li></ul><p>注意右上角的格式为 <code>Yaml</code>，要和你配置的<code>format</code> 一样</p><figure><img src="'+w+'" alt="image-20240404153112431" tabindex="0" loading="lazy"><figcaption>image-20240404153112431</figcaption></figure><h3 id="_2-5-动态刷新" tabindex="-1"><a class="header-anchor" href="#_2-5-动态刷新"><span>2.5 动态刷新</span></a></h3><p>当修改 Consul 上的配置时，客户端无法做到实时更新</p><ul><li><p>在主启动类上<code>@RefreshScope</code> 注解</p></li><li><p>可以设置 <code>spring.cloud.consul.config.watch.wait-time</code> 指明等待多少时间同步更新，默认是<code> 55s</code></p></li></ul><h3 id="_2-6-配置持久化" tabindex="-1"><a class="header-anchor" href="#_2-6-配置持久化"><span>2.6 配置持久化</span></a></h3><p>当Consul 重启之后，在上面的配置就会<code>消失</code> ， 因此需要配置<code> 持久化</code> , 保证 配置不会丢失</p><p>1、创建一个<code> myData</code> 文件夹，将配置保存在此处</p><figure><img src="'+q+'" alt="image-20240404161459754" tabindex="0" loading="lazy"><figcaption>image-20240404161459754</figcaption></figure><p>2、在此目录下创建 <code>consul_start.bat</code> 启动脚本</p><p>将 <code>-data-dir、binpath </code> 改成你自己 的路径</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>@echo.服务启动<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>  \n@echo off  \n@sc create Consul <span class="token assign-left variable">binpath</span><span class="token operator">=</span> <span class="token string">&quot;C:\\Java\\java_notes<span class="token entity" title="\\13">\\13</span>.SpringCloud\\software<span class="token entity" title="\\c">\\c</span>onsul.exe agent -server -ui -bind=127.0.0.1 -client=0.0.0.0 -bootstrap-expect  1  -data-dir C:\\Java\\java_notes<span class="token entity" title="\\13">\\13</span>.SpringCloud\\software\\myData&quot;</span>\n@net start Consul\n@sc config Consul <span class="token assign-left variable">start</span><span class="token operator">=</span> AUTO  \n@echo.Consul start is OK<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>success\n@pause\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若你第一次因为 <code>路径错误</code> 找不到文件启动失败，以管理员身份启动 <code>cmd</code> , 执行 <code>sc delete Consul</code> 后, 修改正确的路径，再次管理员身份运行 <code>bat</code></p><p>3、以管理员身份运行，启动成功</p><figure><img src="'+I+'" alt="image-20240404162958313" tabindex="0" loading="lazy"><figcaption>image-20240404162958313</figcaption></figure><p>4、此时在 Consul 上增加的配置就会保存到 <code>myData </code>目录下</p><figure><img src="'+x+'" alt="image-20240404163255634" tabindex="0" loading="lazy"><figcaption>image-20240404163255634</figcaption></figure><h2 id="三、服务调用" tabindex="-1"><a class="header-anchor" href="#三、服务调用"><span>三、服务调用</span></a></h2><h3 id="_3-1-loadbalance" tabindex="-1"><a class="header-anchor" href="#_3-1-loadbalance"><span>3.1 LoadBalance</span></a></h3><h4 id="_3-1-1-介绍" tabindex="-1"><a class="header-anchor" href="#_3-1-1-介绍"><span>3.1.1 介绍</span></a></h4><p>由于 SpringCloud 的 Ribbon 已经停更，官网明确说明使用 <code>LoadBalance</code>替换 Ribbon</p><blockquote><p><strong>LB负载均衡(Load Balance)是什么</strong></p></blockquote><p>简单的说就是<code>将用户的请求平摊的分配到多个服务上</code>，从而达到系统的HA（高可用）。常见的负载均衡有软件Nginx，LVS，硬件 F5等。</p><blockquote><p><strong>LoadBalance本地负载均衡客户端 VS Nginx服务端负载均衡区别</strong></p></blockquote><p>Nginx是服务器负载均衡，客户端所有请求都会交给nginx，然后由nginx实现转发请求。即负载均衡是由服务端实现的。</p><p>LoadBalance本地负载均衡，在调用其他微服务接口时候，会在注册中心上获取注册信息服务列表之后缓存到JVM本地，从而在本地实现RPC远程服务调用技术。</p><h4 id="_3-1-2-如何使用" tabindex="-1"><a class="header-anchor" href="#_3-1-2-如何使用"><span>3.1.2 如何使用</span></a></h4>',63),hn={class:"hint-container tip"},wn=(0,t.Lk)("p",{class:"hint-container-title"},"官网地址",-1),qn={href:"https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#spring-cloud-loadbalancer",target:"_blank",rel:"noopener noreferrer"},In=(0,t.Fv)('<p>从官网得知 LB 为<code>负载均衡器的抽象和实现</code></p><figure><img src="'+C+'" alt="image-20240404160254565" tabindex="0" loading="lazy"><figcaption>image-20240404160254565</figcaption></figure><p>具体的通过 RestTemplate 实现 LB</p><figure><img src="'+_+'" alt="image-20240404160411124" tabindex="0" loading="lazy"><figcaption>image-20240404160411124</figcaption></figure><p>可通过增加 <code>@LoadBalanced </code>、<code> @Bean</code> 俩个注解实现 LB</p><figure><img src="'+R+'" alt="image-20240404160450799" tabindex="0" loading="lazy"><figcaption>image-20240404160450799</figcaption></figure><h4 id="_3-1-3-案例演示" tabindex="-1"><a class="header-anchor" href="#_3-1-3-案例演示"><span>3.1.3 案例演示</span></a></h4><p>拷贝 8001 为 8002 微服务，通过调用 80 服务，来实现 8001/8002 的负载均衡</p><p>启动成功后，Consul中 <code>cloud-payment-service</code> 服务已经变成俩个，一个8001，一个8002</p><figure><img src="'+S+'" alt="image-20240404165630286" tabindex="0" loading="lazy"><figcaption>image-20240404165630286</figcaption></figure><p>修改80订单服务，通过负载均衡调用 8001/8002</p><p>1、新增 loadbalance 依赖</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-loadbalancer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、修改Controller</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/consumer/pay/get/info&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getInfoByConsul</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token class-name">PaymentSrv_URL</span> <span class="token operator">+</span> <span class="token string">&quot;/pay/get/info&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、访问 <code>/consumer/pay/get/info</code></p><h4 id="_3-1-4-负载均衡原理" tabindex="-1"><a class="header-anchor" href="#_3-1-4-负载均衡原理"><span>3.1.4 负载均衡原理</span></a></h4><blockquote><p><strong>rest接口第几次请求数 % 服务器集群总数量 = 实际调用服务器位置下标</strong></p><p>每次服务重启动后rest接口计数从 1 开始。</p></blockquote><p><strong>例如</strong>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServiceInstance</span><span class="token punctuation">&gt;</span></span> instances <span class="token operator">=</span> discoveryClient<span class="token punctuation">.</span><span class="token function">getInstances</span><span class="token punctuation">(</span><span class="token string">&quot;CLOUD-PAYMENT-SERVICE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n如：   <span class="token class-name">List</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> instances <span class="token operator">=</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">8002</span>\n　　   <span class="token class-name">List</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> instances <span class="token operator">=</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">8001</span>\n\n<span class="token number">8001</span><span class="token operator">+</span> <span class="token number">8002</span> 组合成为集群，它们共计<span class="token number">2</span>台机器，集群总数为<span class="token number">2</span>， 按照轮询算法原理：\n\n当总请求数为<span class="token number">1</span>时： <span class="token number">1</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">=</span><span class="token number">1</span> 对应下标位置为<span class="token number">1</span> ，则获得服务地址为 <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">8001</span>\n当总请求数位<span class="token number">2</span>时： <span class="token number">2</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">=</span><span class="token number">0</span> 对应下标位置为<span class="token number">0</span> ，则获得服务地址为 <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">8002</span>\n当总请求数位<span class="token number">3</span>时： <span class="token number">3</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">=</span><span class="token number">1</span> 对应下标位置为<span class="token number">1</span> ，则获得服务地址为 <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">8001</span>\n当总请求数位<span class="token number">4</span>时： <span class="token number">4</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">=</span><span class="token number">0</span> 对应下标位置为<span class="token number">0</span> ，则获得服务地址为 <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">8002</span>\n如此类推<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-openfeign" tabindex="-1"><a class="header-anchor" href="#_3-2-openfeign"><span>3.2 OpenFeign</span></a></h3><h4 id="_3-2-1-介绍" tabindex="-1"><a class="header-anchor" href="#_3-2-1-介绍"><span>3.2.1 介绍</span></a></h4>',22),xn={class:"hint-container tip"},Cn=(0,t.Lk)("p",{class:"hint-container-title"},"官网地址",-1),_n={href:"https://github.com/spring-cloud/spring-cloud-openfeign",target:"_blank",rel:"noopener noreferrer"},Rn=(0,t.Fv)('<p>Feign 是一个声明式的Web服务客户端，让编写Web服务客户端变得非常容易，<strong>只需创建一个接口并在接口上添加 @FeignClient 注解即可</strong></p><blockquote><p><strong>OpenFeign 较与 Loadbalance 的优势</strong>？</p></blockquote><p>前面在使用 LoadBalance 时，我们需要手动 <code>New RestTemplate</code> 去调用服务端接口，但实际上一个项目中可能有多处需要调用，每一个都要自己去 <code>New</code>， 一是<code>管理不方便</code>，二是并<code>没有实现接口编程</code>！</p><p>而 OpenFeign 的出现正解决了这一难题，通过<code>定义一个接口 + 一个注解</code> 完成 对外暴露可以被调用的接口方法清单。大大简化和降低了调用客户端的开发量。</p><p>OpenFeign同时还集成<code>SpringCloud LoadBalancer</code>、<code>阿里巴巴Sentinel来提供熔断、降级等功能</code>。</p><h4 id="_3-2-2-如何使用" tabindex="-1"><a class="header-anchor" href="#_3-2-2-如何使用"><span>3.2.2 如何使用</span></a></h4><p>1、增加依赖</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>openfeign<span class="token operator">--</span><span class="token operator">&gt;</span>\n        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>\n            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>\n            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>openfeign<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、在<strong>客户端</strong>的主启动类上增加 <code>@EnableFeignClients</code> 注解</p><blockquote><p>需要调用接口的 模块 增加 @EnableFeignClients</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token annotation punctuation">@EnableFeignClients</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、再客户端中暴露的接口清单中增加 <code>@FeignClient(&quot;stores&quot;)</code> ， 里面的value值为 <code>服务端名称</code>，也就是实现这些方法的模块！</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span><span class="token string">&quot;stores&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StoreClient</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;/stores&quot;</span><span class="token punctuation">)</span>\n    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Store</span><span class="token punctuation">&gt;</span></span> <span class="token function">getStores</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;/stores&quot;</span><span class="token punctuation">)</span>\n    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Store</span><span class="token punctuation">&gt;</span></span> <span class="token function">getStores</span><span class="token punctuation">(</span><span class="token class-name">Pageable</span> pageable<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;/stores/{storeId}&quot;</span><span class="token punctuation">,</span> consumes <span class="token operator">=</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span>\n    <span class="token class-name">Store</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;storeId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> storeId<span class="token punctuation">,</span> <span class="token class-name">Store</span> store<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;/stores/{storeId:\\\\d+}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> storeId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-3-案例演示" tabindex="-1"><a class="header-anchor" href="#_3-2-3-案例演示"><span>3.2.3 案例演示</span></a></h4><blockquote><p>将服务端提供的接口清单 放在通用模块 common 中，通过OpenFeign 调用服务端中具体的Controller 方法！</p></blockquote><figure><img src="'+j+'" alt="image-20240404180225749" tabindex="0" loading="lazy"><figcaption>image-20240404180225749</figcaption></figure><p>1、在 <code>commons </code>公共模块中增加 OpenFeign 依赖</p><p>2、提供服务端暴露的接口清单，使用 <code>@FeignClient </code>指明服务端名称！</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span><span class="token string">&quot;cloud-payment-service&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 指明服务端的服务名</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PayFeignApi</span><span class="token punctuation">{</span>\n    <span class="token doc-comment comment">/**\n     * 新增一条支付相关流水记录\n     * <span class="token keyword">@param</span> <span class="token parameter">payDTO</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/pay/add&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">ResultData</span> <span class="token function">addPay</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">PayDTO</span> payDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * 按照主键记录查询支付流水信息\n     * <span class="token keyword">@param</span> <span class="token parameter">id</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/pay/get/{id}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">ResultData</span> <span class="token function">getPayInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// public ResultData getPayInfo(@PathVariable Integer id); // 这样写是错误的，必须指明路径参数名称</span>\n\n    <span class="token doc-comment comment">/**\n     * openfeign天然支持负载均衡演示\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/pay/get/info&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">mylb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、新建模块 <code>cloud-consumer-feign-order80</code></p><p><strong>POM</strong> 和 <code>cloud-consumer-order80</code> 一样</p><p><strong>YAML</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>\n    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>\n\n<span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">application</span><span class="token punctuation">:</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>consumer<span class="token punctuation">-</span>openfeign<span class="token punctuation">-</span>order\n    <span class="token comment">####Spring Cloud Consul for Service Discovery</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n        <span class="token key atrule">consul</span><span class="token punctuation">:</span>\n            <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost\n            <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8500</span>\n            <span class="token key atrule">discovery</span><span class="token punctuation">:</span>\n                <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#优先使用服务ip进行注册</span>\n                <span class="token key atrule">service-name</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>主启动类</strong></p><p>再客户端的主启动类上增加 <code>@EnableFeignClients</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token annotation punctuation">@EnableDiscoveryClient</span>\n<span class="token annotation punctuation">@EnableFeignClients</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainOpenFeign80</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MainOpenFeign80</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Controller</strong></p><p>使用了 OpenFeign，此时在 Controller 中就无需在使用 RestTemplate，引入所创建的 <code>PayFeignApi</code> 接口清单</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderController</span><span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">PayFeignApi</span> payFeignApi<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/feign/pay/add&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">ResultData</span> <span class="token function">addOrder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">PayDTO</span> payDTO<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;第一步：模拟本地addOrder新增订单成功(省略sql操作)，第二步：再开启addPay支付微服务远程调用&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ResultData</span> resultData <span class="token operator">=</span> payFeignApi<span class="token punctuation">.</span><span class="token function">addPay</span><span class="token punctuation">(</span>payDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/feign/pay/get/{id}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">ResultData</span> <span class="token function">getPayInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-------支付微服务远程调用，按照id查询订单支付流水信息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ResultData</span> resultData <span class="token operator">=</span> payFeignApi<span class="token punctuation">.</span><span class="token function">getPayInfo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * openfeign天然支持负载均衡演示\n     *\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/feign/pay/mylb&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">mylb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> payFeignApi<span class="token punctuation">.</span><span class="token function">mylb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行流程</strong></p><blockquote><p>客户端order80服务 通过<code>PayFeignApi</code>调用服务端暴露的接口，在PayFeignApi中通过 <code>@FeignClient</code> 中的服务端名称去<code>Consul </code>中找到对应的服务，最后调用服务端提供的服务接口！</p></blockquote><h4 id="_3-2-4-高级特性" tabindex="-1"><a class="header-anchor" href="#_3-2-4-高级特性"><span>3.2.4 高级特性</span></a></h4><h5 id="_1、超时控制" tabindex="-1"><a class="header-anchor" href="#_1、超时控制"><span>1、超时控制</span></a></h5><blockquote><p>OpenFeign的默认超时时间为60s</p></blockquote><figure><img src="'+T+'" alt="image-20240404185845647" tabindex="0" loading="lazy"><figcaption>image-20240404185845647</figcaption></figure><ul><li>全局配置</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n        <span class="token key atrule">openfeign</span><span class="token punctuation">:</span>\n            <span class="token key atrule">client</span><span class="token punctuation">:</span>\n                <span class="token key atrule">config</span><span class="token punctuation">:</span>\n                  <span class="token key atrule">default</span><span class="token punctuation">:</span>\n                      <span class="token key atrule">connect-timeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>\n                      <span class="token key atrule">read-timeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>局部配置(指定哪个服务的超时时间)</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">openfeign</span><span class="token punctuation">:</span>\n      <span class="token key atrule">client</span><span class="token punctuation">:</span>\n        <span class="token key atrule">config</span><span class="token punctuation">:</span>\n          <span class="token key atrule">cloud-payment-service</span><span class="token punctuation">:</span>\n            \t\t<span class="token comment">#连接超时时间</span>\n                      <span class="token key atrule">connectTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>\n            \t\t<span class="token comment">#读取超时时间</span>\n                      <span class="token key atrule">readTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="'+P+'" alt="image-20240404190229058" tabindex="0" loading="lazy"><figcaption>image-20240404190229058</figcaption></figure><h5 id="_2、重试机制" tabindex="-1"><a class="header-anchor" href="#_2、重试机制"><span>2、重试机制</span></a></h5><blockquote><p>默认关闭</p></blockquote><p>增加配置类开启重试机制：</p><blockquote><p>最大请求次数3次：</p><ul><li>初始请求一次</li><li>重试俩次</li></ul></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeignConfig</span>\n<span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">Retryer</span> <span class="token function">myRetryer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token comment">// return Retryer.NEVER_RETRY; //Feign默认配置是不走重试策略的</span>\n\n        <span class="token comment">// 最大请求次数为3(1+2)，初始间隔时间为100ms，重试间最大间隔时间为1s</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Retryer<span class="token punctuation">.</span>Default</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试</strong></p><p>在上面我将超时时间设置了5s，重试3次，那么执行间隔为 15S</p><figure><img src="'+L+'" alt="image-20240404190854797" tabindex="0" loading="lazy"><figcaption>image-20240404190854797</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>目前控制台没有看到3次重试过程，只看到结果，<strong>正常的，正确的</strong>，是feign的日志打印问题</p></div><h5 id="_3、默认httpclient修改" tabindex="-1"><a class="header-anchor" href="#_3、默认httpclient修改"><span>3、默认HttpClient修改</span></a></h5><p>OpenFeign中http client 如果不做特殊配置，OpenFeign默认使用JDK自带的 <code>HttpURLConnection</code>发送HTTP请求，由于默认HttpURLConnection<code>没有连接池、性能和效率比较低</code></p><blockquote><p>因此使用 Apache HttpClient5 替换默认的HttpURLConnection</p></blockquote><p>1、增加依赖</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>        <span class="token comment">&lt;!-- httpclient5--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.httpcomponents.client5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>httpclient5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- feign-hc5--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>feign-hc5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>13.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、开启</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment">#  Apache HttpClient5 配置开启</span>\n<span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">openfeign</span><span class="token punctuation">:</span>\n      <span class="token key atrule">httpclient</span><span class="token punctuation">:</span>\n        <span class="token key atrule">hc5</span><span class="token punctuation">:</span>\n          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试</strong></p><figure><img src="'+E+'" alt="image-20240404191738868" tabindex="0" loading="lazy"><figcaption>image-20240404191738868</figcaption></figure><h5 id="_4、请求-响应压缩" tabindex="-1"><a class="header-anchor" href="#_4、请求-响应压缩"><span>4、请求/响应压缩</span></a></h5><p><strong>开启请求/响应压缩、设置出发压缩大小</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n        <span class="token key atrule">openfeign</span><span class="token punctuation">:</span>\n            <span class="token key atrule">compression</span><span class="token punctuation">:</span>\n                <span class="token key atrule">request</span><span class="token punctuation">:</span> <span class="token comment"># 请求压缩</span>\n                    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n                <span class="token key atrule">response</span><span class="token punctuation">:</span> <span class="token comment"># 响应压缩</span>\n                    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n                    <span class="token key atrule">min-request-size</span><span class="token punctuation">:</span> <span class="token number">2024</span>  <span class="token comment">#最小触发压缩的大小</span>\n                    <span class="token key atrule">mime-types</span><span class="token punctuation">:</span> text/xml<span class="token punctuation">,</span>application/xml<span class="token punctuation">,</span>application/json  <span class="token comment">#触发压缩数据类型</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5、日志打印功能" tabindex="-1"><a class="header-anchor" href="#_5、日志打印功能"><span>5、日志打印功能</span></a></h5><p>Feign 提供了日志打印功能，我们可以通过配置来调整日志级别，从而了解 Feign 中 Http 请求的细节，说白了就是对Feign接口的调用情况进行监控和输出</p><blockquote><p>日志级别</p><p>NONE：默认的，不显示任何日志；</p><p>BASIC：仅记录请求方法、URL、响应状态码及执行时间；</p><p>HEADERS：除了 BASIC 中定义的信息之外，还有请求和响应的头信息；</p><p>FULL：除了 HEADERS 中定义的信息之外，还有请求和响应的正文及元数据。</p></blockquote><p>在FeignConfig中注册</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Bean</span>\n    <span class="token class-name">Logger<span class="token punctuation">.</span>Level</span> <span class="token function">feignLoggerLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token class-name">Logger<span class="token punctuation">.</span>Level</span><span class="token punctuation">.</span><span class="token constant">FULL</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在配置文件中指明哪个接口需要打印：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment"># 公式(三段)：logging.level + 含有@FeignClient注解的完整带包名的接口名+debug</span>\n<span class="token key atrule">logging</span><span class="token punctuation">:</span>\n    <span class="token key atrule">level</span><span class="token punctuation">:</span>\n        <span class="token key atrule">com</span><span class="token punctuation">:</span>\n            <span class="token key atrule">atguigu</span><span class="token punctuation">:</span>\n                <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n                    <span class="token key atrule">feignService</span><span class="token punctuation">:</span>\n                        <span class="token key atrule">PayFeignApi</span><span class="token punctuation">:</span> debug \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试</strong></p><figure><img src="'+F+'" alt="image-20240404193126160" tabindex="0" loading="lazy"><figcaption>image-20240404193126160</figcaption></figure><h2 id="四、熔断降级" tabindex="-1"><a class="header-anchor" href="#四、熔断降级"><span>四、熔断降级</span></a></h2><p>复杂分布式体系结构中的应用程序有数十个依赖关系，每个依赖关系在某些时候将<code>不可避免地失败</code></p><p>多个微服务之间调用的时候，假设微服务A调用微服务B和微服务C，微服务B和微服务C又调用其它的微服务，这就是所谓的 <strong>“扇出”</strong>。<strong>如果扇出的链路上某个微服务的调用响应时间过长或者不可用，对微服务A的调用就会占用越来越多的系统资源，进而引起系统崩溃，所谓的“雪崩效应”.</strong></p><p><strong>解决方法</strong></p><blockquote><p>有问题的节点，快速熔断（快速返回失败处理或者返回默认兜底数据【服务降级】）。</p></blockquote><h3 id="_4-1-概念介绍" tabindex="-1"><a class="header-anchor" href="#_4-1-概念介绍"><span>4.1 概念介绍</span></a></h3><p><strong>降级</strong></p><p>简单来说就是服务器出现问题时，返回给用户一个友好提示，例如 服务器忙，请稍后再试</p><p>一般情况下，<code>程序运行异常、超时、服务熔断触发降级、线程池打满</code> 都会触发降级！</p><p><strong>熔断</strong></p><p>在互联网系统中，当下游服务因访问压力过大而响应变慢或失败，上游服务为了保护系统整体的可用性，可以暂时切断对下游服务的调用。 <strong>这种牺牲局部，保全整体的措施就叫做熔断。</strong></p><figure><img src="'+M+'" alt="image-20240404224526487" tabindex="0" loading="lazy"><figcaption>image-20240404224526487</figcaption></figure><p>一旦下游服务C因某些原因变得不可用，积压了大量请求，服务B的请求线程也随之阻塞。线程资源逐渐耗尽，使得服务B也变得不可用。紧接着，服务 A也变为不可用，整个调用链路被拖垮。</p><p>因此，需要服务熔断来确保整个系统的可用性</p><p><strong>限流</strong></p><p>秒杀高并发等操作，严禁一窝蜂的过来拥挤，大家排队，一秒钟N个，有序进行</p><h3 id="_4-2-resilience4j" tabindex="-1"><a class="header-anchor" href="#_4-2-resilience4j"><span>4.2 Resilience4J</span></a></h3><h4 id="_4-2-1-介绍" tabindex="-1"><a class="header-anchor" href="#_4-2-1-介绍"><span>4.2.1 介绍</span></a></h4><blockquote><p>Circuit breaker提供了跨不同断路器实现的抽象, 它提供了一致的 API 供您在应用程序中使用.</p><p>而 Resilience4J 正是Circuit breaker的实现！</p><p>Resilience4j 是一个用于<code>帮助构建弹性</code>和<code>容错性</code>应用程序的 Java 库。它提供了一组工具和模式，使开发人员能够更容易地编写可靠、高可用的应用程序。</p></blockquote><figure><img src="'+O+'" alt="image-20240404222812716" tabindex="0" loading="lazy"><figcaption>image-20240404222812716</figcaption></figure><p><strong>作用</strong></p><ul><li><strong>resilience4j-circuitbreaker: Circuit breaking（断路）</strong></li><li><strong>resilience4j-ratelimiter: Rate limiting （限流）</strong></li><li><strong>resilience4j-bulkhead: Bulkheading （隔离）</strong></li><li>resilience4j-retry: Automatic retrying (sync and async) （自动重试）</li><li>resilience4j-timelimiter: Timeout handling （超时处理）</li><li>resilience4j-cache: Result caching （结果缓存）</li></ul><h4 id="_4-2-2-熔断机制" tabindex="-1"><a class="header-anchor" href="#_4-2-2-熔断机制"><span>4.2.2 熔断机制</span></a></h4>',93),Sn={class:"hint-container tip"},jn=(0,t.Lk)("p",{class:"hint-container-title"},"中文文档",-1),Tn={href:"https://github.com/lmhmhl/Resilience4j-Guides-Chinese/blob/main/core-modules/CircuitBreaker.md",target:"_blank",rel:"noopener noreferrer"},Pn=(0,t.Fv)('<p><strong>避免局部不稳定因素导致整体的雪崩。熔断降级作为保护自身的手段，通常在客户端（调用端）进行配置</strong>。</p><p><code>断路器(Circuit Breaker)</code>是熔断机制的一种实现方式。它是熔断机制的<code>具体实现</code>，类似于电路中的断路器，用于监控对依赖服务的调用。当依赖服务的故障率超过阈值时，断路器会切换到<code>开启状态</code>，阻止对该服务的请求，从而防止故障的传播。在开启状态下，断路器会暂时拒绝所有请求，并在一段时间后尝试重新请求依赖服务。如果这次请求成功，断路器会恢复到<code>关闭状态</code>，继续允许请求通过；</p><p><strong>断路器的状态</strong></p><ul><li><code>关闭(CLOSE)</code><ul><li>断路器关闭时，所有请求均可通过，属于正常状态</li></ul></li><li><code>开启(OPEN)</code><ul><li>当请求的失败率达到一定的<code>阈值</code>后，断路器就会由 关闭转换为开启状态，并拒绝所有请求。</li></ul></li><li><code>半开(HALF_OPEN)</code><ul><li>断路开启经过一段时间后，会转换到 <code>半开</code> 状态 ， 并允许通过一定数量的请求，尝试<code>重新计算失败率</code> , 如果失败率超过阈值，仍然为开启状态，否则变为关闭状态！</li></ul></li><li>禁用（DISABLE） <ul><li>始终允许访问</li></ul></li><li>强制开启（FORCED_OPEN） <ul><li>始终拒绝访问</li></ul></li></ul><p><strong>断路器使用滑动窗口来统计调用结果，有俩种计算<code>阈值</code>的方式</strong></p><ul><li>基于调用数量的滑动窗口： 统计最近N次的调用结果</li><li>基于时间的滑动窗口： 统计最近N秒的调用结果</li></ul><h5 id="_1、断路器配置参数" tabindex="-1"><a class="header-anchor" href="#_1、断路器配置参数"><span>1、断路器配置参数</span></a></h5><table><thead><tr><th><strong>failure-rate-threshold</strong></th><th><strong>以百分比配置失败率峰值</strong></th></tr></thead><tbody><tr><td><strong>sliding-window-type</strong></td><td><strong>断路器的滑动窗口期类型 可以基于“次数”（COUNT_BASED）或者“时间”（TIME_BASED）进行熔断，默认是COUNT_BASED。</strong></td></tr><tr><td><strong>sliding-window-size</strong></td><td><strong>若COUNT_BASED，则10次调用中有50%失败（即5次）打开熔断断路器；若为TIME_BASED则，此时还有额外的两个设置属性，含义为：在N秒内（sliding-window-size）100%（slow-call-rate-threshold）的请求超过N秒（slow-call-duration-threshold）打开断路器</strong></td></tr><tr><td><strong>slowCallRateThreshold</strong></td><td><strong>以百分比的方式配置，断路器把调用时间大于slowCallDurationThreshold的调用视为慢调用，当慢调用比例大于等于峰值时，断路器开启，并进入服务降级。</strong></td></tr><tr><td><strong>slowCallDurationThreshold</strong></td><td><strong>配置调用时间的峰值，高于该峰值的视为慢调用。</strong></td></tr><tr><td><strong>permitted-number-of-calls-in-half-open-state</strong></td><td><strong>运行断路器在HALF_OPEN状态下时进行N次调用，如果故障或慢速调用仍然高于阈值，断路器再次进入打开状态。</strong></td></tr><tr><td><strong>minimum-number-of-calls</strong></td><td><strong>在每个滑动窗口期样本数，配置断路器计算错误率或者慢调用率的最小调用数。比如设置为5意味着，在计算故障率之前，必须至少调用5次。如果只记录了4次，即使4次都失败了，断路器也不会进入到打开状态。</strong></td></tr><tr><td><strong>wait-duration-in-open-state</strong></td><td><strong>从OPEN到HALF_OPEN状态需要等待的时间</strong></td></tr></tbody></table><h5 id="_2、基于调用数量统计的案例演示" tabindex="-1"><a class="header-anchor" href="#_2、基于调用数量统计的案例演示"><span>2、基于调用数量统计的案例演示</span></a></h5><blockquote><p><strong>断路器应该配置在哪个模块？</strong></p><p>配置在客户端，也就是调用方！我们可以这样想，断路器相当于家庭的保险丝，客户端就相当于家里的电器(调用方)， 服务端就相当于 国家电网 (被调用方)。</p></blockquote><p><code>cloud-provider-payment8001</code> 模块模块新建一个 <code>PayCircuitController</code> ，并且通过OpenFeign 暴露出去</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayCircuitController</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">//=========Resilience4j CircuitBreaker 的例子</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/pay/circuit/{id}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myCircuit</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>id <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;----circuit id 不能负数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>id <span class="token operator">==</span> <span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">try</span> <span class="token punctuation">{</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;Hello, circuit! inputId:  &quot;</span><span class="token operator">+</span>id<span class="token operator">+</span><span class="token string">&quot; \\t &quot;</span> <span class="token operator">+</span> <span class="token class-name">IdUtil</span><span class="token punctuation">.</span><span class="token function">simpleUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cloud-api-commons</code> 模块</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**\n     * Resilience4j CircuitBreaker 的例子\n     * <span class="token keyword">@param</span> <span class="token parameter">id</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/pay/circuit/{id}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myCircuit</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在客户端也就是 <code>cloud-consumer-feign-order80</code> 模块配置熔断机制。</p><p><strong>增加依赖</strong>：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>        <span class="token comment">&lt;!--resilience4j-circuitbreaker--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-circuitbreaker-resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- 由于断路保护等需要AOP实现，所以必须导入AOP包 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yaml配置</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n        <span class="token key atrule">openfeign</span><span class="token punctuation">:</span>\n            <span class="token key atrule">circuitbreaker</span><span class="token punctuation">:</span>\n       \t\t\t <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n       \t\t\t <span class="token key atrule">group</span><span class="token punctuation">:</span>\n          \t\t\t<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#没开分组永远不用分组的配置。精确优先、分组次之(开了分组)、默认最后</span>\n          \t\t\t\n<span class="token comment"># Resilience4j CircuitBreaker 按照次数：COUNT_BASED 的例子</span>\n<span class="token comment">#  6次访问中当执行方法的失败率达到50%时CircuitBreaker将进入开启OPEN状态(保险丝跳闸断电)拒绝所有请求。</span>\n<span class="token comment">#  等待5秒后，CircuitBreaker 将自动从开启OPEN状态过渡到半开HALF_OPEN状态，允许一些请求通过以测试服务是否恢复正常。</span>\n<span class="token comment">#  如还是异常CircuitBreaker 将重新进入开启OPEN状态；如正常将进入关闭CLOSE闭合状态恢复正常处理请求。</span>\n<span class="token key atrule">resilience4j</span><span class="token punctuation">:</span>\n    <span class="token key atrule">circuitbreaker</span><span class="token punctuation">:</span>\n        <span class="token key atrule">configs</span><span class="token punctuation">:</span>\n            <span class="token key atrule">default</span><span class="token punctuation">:</span>\n<span class="token comment">#设置50%的调用失败时打开断路器，超过失败请求百分⽐CircuitBreaker变为OPEN状态</span>\n                <span class="token key atrule">failureRateThreshold</span><span class="token punctuation">:</span> 50 。\n                <span class="token comment"># 滑动窗口的类型</span>\n                <span class="token key atrule">slidingWindowType</span><span class="token punctuation">:</span> COUNT_BASED \n<span class="token comment">#滑动窗⼝的⼤⼩配置COUNT_BASED表示6个请求，配置TIME_BASED表示6秒</span>\n                <span class="token key atrule">slidingWindowSize</span><span class="token punctuation">:</span> <span class="token number">6</span> \n<span class="token comment">#断路器计算失败率或慢调用率之前所需的最小样本(每个滑动窗口周期)。如果minimumNumberOfCalls为10，则必须最少记录10个样本，然后才能计算失败率。如果只记录了9次调用，即使所有9次调用都失败，断路器也不会开启。            </span>\n                <span class="token key atrule">minimumNumberOfCalls</span><span class="token punctuation">:</span> <span class="token number">6</span>\n<span class="token comment"># 是否启用自动从开启状态过渡到半开状态，默认值为true。如果启用，CircuitBreaker将自动从开启状态过渡到半开状态，并允许一些请求通过以测试服务是否恢复正常</span>\n                <span class="token key atrule">automaticTransitionFromOpenToHalfOpenEnabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> \n<span class="token comment">#从OPEN到HALF_OPEN状态需要等待的时间</span>\n                <span class="token key atrule">waitDurationInOpenState</span><span class="token punctuation">:</span> 5s \n<span class="token comment">#半开状态允许的最大请求数，默认值为10。在半开状态下，CircuitBreaker将允许最多permittedNumberOfCallsInHalfOpenState个请求通过，如果其中有任何一个请求失败，CircuitBreaker将重新进入开启状态。</span>\n                <span class="token key atrule">permittedNumberOfCallsInHalfOpenState</span><span class="token punctuation">:</span> <span class="token number">2</span> \n                <span class="token key atrule">recordExceptions</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> java.lang.Exception  <span class="token comment"># 计入失败的异常</span>\n        <span class="token key atrule">instances</span><span class="token punctuation">:</span>\n            <span class="token key atrule">cloud-payment-service</span><span class="token punctuation">:</span>\n                <span class="token key atrule">baseConfig</span><span class="token punctuation">:</span> default\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>创建OrderCircuitController</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderCircuitController</span>\n<span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Resource</span>\n    <span class="token keyword">private</span> <span class="token class-name">PayFeignApi</span> payFeignApi<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/feign/pay/circuit/{id}&quot;</span><span class="token punctuation">)</span>\n    <span class="token comment">// name要和配置中的instances保持一致</span>\n    <span class="token comment">// fallbackMethod兜底方法，当断路器开启时，要给用户一个友好的反馈！</span>\n    <span class="token annotation punctuation">@CircuitBreaker</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;cloud-payment-service&quot;</span><span class="token punctuation">,</span> fallbackMethod <span class="token operator">=</span> <span class="token string">&quot;myCircuitFallback&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myCircuitBreaker</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> payFeignApi<span class="token punctuation">.</span><span class="token function">myCircuit</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">//myCircuitFallback就是服务降级后的兜底处理方法</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myCircuitFallback</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这里是容错处理逻辑，返回备用结果</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;myCircuitFallback，系统繁忙，请稍后再试-----/(ㄒoㄒ)/~~&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试</strong></p>',22),Ln={href:"http://localhost/feign/pay/circuit/1",target:"_blank",rel:"noopener noreferrer"},En={href:"http://localhost/feign/pay/circuit/-4",target:"_blank",rel:"noopener noreferrer"},Fn=(0,t.Fv)('<blockquote><p>在 PayCircuitController中当ID = -4 时 ，会抛出 RuntimeException 异常，在配置中我们配置了 <code>recordExceptions</code> ， 因此会计入失败的请求！。</p><p>若异常不相同或者不是父子类的关系，则不会计入！</p></blockquote><p>当我们访问6次，错误的请求占 50% 时，就会开启断路器，执行fallback兜底方法！</p><h5 id="_3、基于调用时间-统计的案例演示" tabindex="-1"><a class="header-anchor" href="#_3、基于调用时间-统计的案例演示"><span>3、基于调用时间 统计的案例演示</span></a></h5><p>配置</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment"># Resilience4j CircuitBreaker 按照时间：TIME_BASED 的例子</span>\n<span class="token key atrule">resilience4j</span><span class="token punctuation">:</span>\n    <span class="token key atrule">timelimiter</span><span class="token punctuation">:</span>\n        <span class="token key atrule">configs</span><span class="token punctuation">:</span>\n            <span class="token key atrule">default</span><span class="token punctuation">:</span>\n                <span class="token key atrule">timeout-duration</span><span class="token punctuation">:</span> 10s <span class="token comment">#神坑的位置，timelimiter 默认限制远程1s，超于1s就超时异常，配置了降级，就走降级逻辑</span>\n    <span class="token key atrule">circuitbreaker</span><span class="token punctuation">:</span>\n        <span class="token key atrule">configs</span><span class="token punctuation">:</span>\n            <span class="token key atrule">default</span><span class="token punctuation">:</span>\n                <span class="token key atrule">failureRateThreshold</span><span class="token punctuation">:</span> <span class="token number">50</span> <span class="token comment">#设置50%的调用失败时打开断路器，超过失败请求百分⽐CircuitBreaker变为OPEN状态。</span>\n                <span class="token key atrule">slowCallDurationThreshold</span><span class="token punctuation">:</span> 2s <span class="token comment">#慢调用时间阈值，高于这个阈值的视为慢调用并增加慢调用比例。</span>\n                <span class="token key atrule">slowCallRateThreshold</span><span class="token punctuation">:</span> <span class="token number">30</span> <span class="token comment">#慢调用百分比峰值，断路器把调用时间⼤于slowCallDurationThreshold，视为慢调用，当慢调用比例高于阈值，断路器打开，并开启服务降级</span>\n                <span class="token key atrule">slidingWindowType</span><span class="token punctuation">:</span> TIME_BASED <span class="token comment"># 滑动窗口的类型</span>\n                <span class="token key atrule">slidingWindowSize</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment">#滑动窗口的大小配置，配置TIME_BASED表示2秒</span>\n                <span class="token key atrule">minimumNumberOfCalls</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment">#断路器计算失败率或慢调用率之前所需的最小样本(每个滑动窗口周期)。</span>\n                <span class="token key atrule">permittedNumberOfCallsInHalfOpenState</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment">#半开状态允许的最大请求数，默认值为10。</span>\n                <span class="token key atrule">waitDurationInOpenState</span><span class="token punctuation">:</span> 5s <span class="token comment">#从OPEN到HALF_OPEN状态需要等待的时间</span>\n                <span class="token key atrule">recordExceptions</span><span class="token punctuation">:</span>\n                    <span class="token punctuation">-</span> java.lang.Exception\n        <span class="token key atrule">instances</span><span class="token punctuation">:</span>\n            <span class="token key atrule">cloud-payment-service</span><span class="token punctuation">:</span>\n                <span class="token key atrule">baseConfig</span><span class="token punctuation">:</span> default\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-3-隔离" tabindex="-1"><a class="header-anchor" href="#_4-2-3-隔离"><span>4.2.3 隔离</span></a></h4>',6),Mn={class:"hint-container tip"},On=(0,t.Lk)("p",{class:"hint-container-title"},"文档",-1),An={href:"https://github.com/lmhmhl/Resilience4j-Guides-Chinese/blob/main/core-modules/bulkhead.md",target:"_blank",rel:"noopener noreferrer"},Dn=(0,t.Lk)("p",null,[(0,t.Lk)("strong",null,"依赖隔离&负载保护"),(0,t.eW)("：用来限制对于下游服务的最大并发数量")],-1),Bn=(0,t.Lk)("p",null,"Resilience4j提供了两种隔离的实现方式，可以限制并发执行的数量:",-1),Nn=(0,t.Lk)("ul",null,[(0,t.Lk)("li",null,[(0,t.Lk)("code",null,"SemaphoreBulkhead"),(0,t.eW)("使用了信号量")]),(0,t.Lk)("li",null,[(0,t.Lk)("code",null,"FixedThreadPoolBulkhead"),(0,t.eW)("使用了有界队列和固定大小线程池")])],-1),zn=(0,t.Lk)("h5",{id:"_1、semaphorebulkhead",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#_1、semaphorebulkhead"},[(0,t.Lk)("span",null,"1、SemaphoreBulkhead")])],-1),Gn={href:"https://blog.csdn.net/aetawt/article/details/128044736",target:"_blank",rel:"noopener noreferrer"},Hn=(0,t.Lk)("p",null,[(0,t.eW)("通过"),(0,t.Lk)("code",null,"维持一组许可证"),(0,t.eW)(" 来实现阻塞和通行")],-1),Un=(0,t.Fv)('<figure><img src="'+A+'" alt="image-20240405154506118" tabindex="0" loading="lazy"><figcaption>image-20240405154506118</figcaption></figure><p><strong>如何使用</strong></p><p>增加依赖</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--resilience4j-bulkhead--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-bulkhead<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置参数</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment">####resilience4j bulkhead 的例子</span>\n<span class="token key atrule">resilience4j</span><span class="token punctuation">:</span>\n  <span class="token key atrule">bulkhead</span><span class="token punctuation">:</span>\n    <span class="token key atrule">configs</span><span class="token punctuation">:</span>\n      <span class="token key atrule">default</span><span class="token punctuation">:</span>\n        <span class="token key atrule">maxConcurrentCalls</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment"># 隔离允许并发线程执行的最大数量</span>\n        <span class="token key atrule">maxWaitDuration</span><span class="token punctuation">:</span> 1s <span class="token comment"># 当达到并发调用数量时，新的线程的阻塞时间，我只愿意等待1秒，过时不候进舱壁兜底fallback</span>\n    <span class="token key atrule">instances</span><span class="token punctuation">:</span>\n      <span class="token key atrule">cloud-payment-service</span><span class="token punctuation">:</span>\n        <span class="token key atrule">baseConfig</span><span class="token punctuation">:</span> default\n  <span class="token key atrule">timelimiter</span><span class="token punctuation">:</span>\n    <span class="token key atrule">configs</span><span class="token punctuation">:</span>\n      <span class="token key atrule">default</span><span class="token punctuation">:</span>\n        <span class="token key atrule">timeout-duration</span><span class="token punctuation">:</span> 20s\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在调用方的Controller使用注解 <code>@Bulkhead</code> 标注，指明隔离类型为：<code>Bulkhead.Type.SEMAPHORE</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**\n     *(船的)舱壁,隔离\n     * <span class="token keyword">@param</span> <span class="token parameter">id</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/feign/pay/bulkhead/{id}&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@Bulkhead</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;cloud-payment-service&quot;</span><span class="token punctuation">,</span>fallbackMethod <span class="token operator">=</span> <span class="token string">&quot;myBulkheadFallback&quot;</span><span class="token punctuation">,</span>type <span class="token operator">=</span> <span class="token class-name">Bulkhead<span class="token punctuation">.</span>Type</span><span class="token punctuation">.</span><span class="token constant">SEMAPHORE</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myBulkhead</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> payFeignApi<span class="token punctuation">.</span><span class="token function">myBulkhead</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myBulkheadFallback</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;myBulkheadFallback，隔板超出最大数量限制，系统繁忙，请稍后再试-----/(ㄒoㄒ)/~~&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2、fixedthreadpoolbulkhead" tabindex="-1"><a class="header-anchor" href="#_2、fixedthreadpoolbulkhead"><span>2、FixedThreadPoolBulkhead</span></a></h5>',9),Wn={href:"https://blog.csdn.net/aetawt/article/details/128044736",target:"_blank",rel:"noopener noreferrer"},Vn=(0,t.Fv)('<figure><img src="'+D+'" alt="image-20240405160342750" tabindex="0" loading="lazy"><figcaption>image-20240405160342750</figcaption></figure><p><strong>如何使用</strong></p><p>依赖</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;!--resilience4j-bulkhead--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;io.github.resilience4j&lt;/groupId&gt;\n    &lt;artifactId&gt;resilience4j-bulkhead&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment">####resilience4j bulkhead -THREADPOOL的例子</span>\n<span class="token key atrule">resilience4j</span><span class="token punctuation">:</span>\n    <span class="token key atrule">timelimiter</span><span class="token punctuation">:</span>\n        <span class="token key atrule">configs</span><span class="token punctuation">:</span>\n            <span class="token key atrule">default</span><span class="token punctuation">:</span>\n                <span class="token key atrule">timeout-duration</span><span class="token punctuation">:</span> 10s <span class="token comment">#timelimiter默认限制远程1s，超过报错不好演示效果所以加上10秒</span>\n    <span class="token key atrule">thread-pool-bulkhead</span><span class="token punctuation">:</span>\n        <span class="token key atrule">configs</span><span class="token punctuation">:</span>\n            <span class="token key atrule">default</span><span class="token punctuation">:</span>\n                <span class="token key atrule">core-thread-pool-size</span><span class="token punctuation">:</span> <span class="token number">4</span>   <span class="token comment"># 最大线程数</span>\n                <span class="token key atrule">max-thread-pool-size</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment"># 核心线程数</span>\n                <span class="token key atrule">queue-capacity</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment"># 等待队列</span>\n                <span class="token comment"># 并发的线程数：最大线程数 + 等待队列 = 6</span>\n        <span class="token key atrule">instances</span><span class="token punctuation">:</span>\n            <span class="token key atrule">cloud-payment-service</span><span class="token punctuation">:</span>\n                <span class="token key atrule">baseConfig</span><span class="token punctuation">:</span> default\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在调用方的Controller使用注解 <code>@Bulkhead</code> 标注，指明隔离类型为：<code>Bulkhead.Type.THREADPOOL</code></p><p>并且<code> FixedThreadPoolBulkhead</code> 要求的返回类型为 <code>CompletableFuture</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * (船的)舱壁,隔离,THREADPOOL\n * <span class="token keyword">@param</span> <span class="token parameter">id</span>\n * <span class="token keyword">@return</span>\n */</span>\n<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/feign/pay/bulkhead/{id}&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Bulkhead</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;cloud-payment-service&quot;</span><span class="token punctuation">,</span>fallbackMethod <span class="token operator">=</span> <span class="token string">&quot;myBulkheadPoolFallback&quot;</span><span class="token punctuation">,</span>type <span class="token operator">=</span> <span class="token class-name">Bulkhead<span class="token punctuation">.</span>Type</span><span class="token punctuation">.</span><span class="token constant">THREADPOOL</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">myBulkheadTHREADPOOL</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;\\t&quot;</span><span class="token operator">+</span><span class="token string">&quot;enter the method!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;\\t&quot;</span><span class="token operator">+</span><span class="token string">&quot;exist the method!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> payFeignApi<span class="token punctuation">.</span><span class="token function">myBulkhead</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> <span class="token string">&quot; Bulkhead.Type.THREADPOOL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">myBulkheadPoolFallback</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Bulkhead.Type.THREADPOOL，系统繁忙，请稍后再试-----/(ㄒoㄒ)/~~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-4-限流" tabindex="-1"><a class="header-anchor" href="#_4-2-4-限流"><span>4.2.4 限流</span></a></h4>',10),$n={class:"hint-container tip"},Xn=(0,t.Lk)("p",{class:"hint-container-title"},"文档",-1),Jn={href:"https://github.com/lmhmhl/Resilience4j-Guides-Chinese/blob/main/core-modules/ratelimiter.md",target:"_blank",rel:"noopener noreferrer"},Kn=(0,t.Fv)('<p>依赖</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>        <span class="token comment">&lt;!--resilience4j-ratelimiter--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.resilience4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>resilience4j-ratelimiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment">####resilience4j ratelimiter 限流的例子</span>\n<span class="token key atrule">resilience4j</span><span class="token punctuation">:</span>\n    <span class="token key atrule">ratelimiter</span><span class="token punctuation">:</span>\n        <span class="token key atrule">configs</span><span class="token punctuation">:</span>\n            <span class="token key atrule">default</span><span class="token punctuation">:</span>\n                <span class="token key atrule">limitForPeriod</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment">#在一次刷新周期内，允许执行的最大请求数</span>\n                <span class="token key atrule">limitRefreshPeriod</span><span class="token punctuation">:</span> 1s <span class="token comment"># 限流器每隔limitRefreshPeriod刷新一次，将允许处理的最大请求数量重置为limitForPeriod</span>\n                <span class="token key atrule">timeout-duration</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># 线程等待权限的默认等待时间</span>\n        <span class="token key atrule">instances</span><span class="token punctuation">:</span>\n            <span class="token key atrule">cloud-payment-service</span><span class="token punctuation">:</span>\n                <span class="token key atrule">baseConfig</span><span class="token punctuation">:</span> default\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>@RateLimiter</code> 注解标注</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/feign/pay/ratelimit/{id}&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@RateLimiter</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;cloud-payment-service&quot;</span><span class="token punctuation">,</span>fallbackMethod <span class="token operator">=</span> <span class="token string">&quot;myRatelimitFallback&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myBulkhead</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> payFeignApi<span class="token punctuation">.</span><span class="token function">myRatelimit</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myRatelimitFallback</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;你被限流了，禁止访问/(ㄒoㄒ)/~~&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、分布式链路追踪" tabindex="-1"><a class="header-anchor" href="#五、分布式链路追踪"><span>五、分布式链路追踪</span></a></h2><p>在微服务框架中，一个由客户端发起的请求在后端系统中会经过多个不同的的服务节点调用来协同产生最后的请求结果，每一个前段请求都会形成一条复杂的分布式服务调用链路，链路中的任何一环出现高延时或错误都会引起整个请求最后的失败。</p><figure><img src="'+B+'" alt="image-20240405170221197" tabindex="0" loading="lazy"><figcaption>image-20240405170221197</figcaption></figure><p>在分布式与微服务场景下，我们需要解决如下问题：</p><ul><li><p>在大规模分布式与微服务集群下，如何实时观测系统的整体调用链路情况。</p></li><li><p>在大规模分布式与微服务集群下，如何快速发现并定位到问题。</p></li><li><p>在大规模分布式与微服务集群下，如何尽可能精确的判断故障对系统的影响范围与影响程度。</p></li><li><p>在大规模分布式与微服务集群下，如何尽可能精确的梳理出服务之间的依赖关系，并判断出服务之间的依赖关系是否合理。</p></li><li><p>在大规模分布式与微服务集群下，如何尽可能精确的分析整个系统调用链路的性能与瓶颈点。</p></li><li><p>在大规模分布式与微服务集群下，如何尽可能精确的分析系统的存储瓶颈与容量规划。</p></li></ul><h3 id="_5-1-micrometer-zipkin" tabindex="-1"><a class="header-anchor" href="#_5-1-micrometer-zipkin"><span>5.1 Micrometer + Zipkin</span></a></h3><blockquote><p>Micrometer 提供了一套完整的服务跟踪的解决方案</p><p>在分布式系统中提供追踪解决方案并且兼容支持了zipkin</p></blockquote><p>一条链路通过Trace Id唯一标识，Span标识发起的请求信息，各span通过parent id 关联起来</p><figure><img src="'+N+'" alt="image-20240405171318573" tabindex="0" loading="lazy"><figcaption>image-20240405171318573</figcaption></figure><h4 id="_5-1-1-下载-zipkin" tabindex="-1"><a class="header-anchor" href="#_5-1-1-下载-zipkin"><span>5.1.1 下载 ZipKin</span></a></h4><p><strong>下载 zipkin：</strong></p>',17),Zn={href:"https://zipkin.io/pages/quickstart",target:"_blank",rel:"noopener noreferrer"},Yn=(0,t.Lk)("p",null,[(0,t.Lk)("strong",null,"执行 jar 包：")],-1),Qn=(0,t.Lk)("p",null,"java -jar zipkin-server-2.12.9-exec.jar",-1),ns=(0,t.Lk)("p",null,[(0,t.Lk)("strong",null,"访问：")],-1),ss={href:"http://localhost:9411/zipkin/",target:"_blank",rel:"noopener noreferrer"},as=(0,t.Fv)('<h4 id="_5-1-2-搭建链路监控" tabindex="-1"><a class="header-anchor" href="#_5-1-2-搭建链路监控"><span>5.1.2 搭建链路监控</span></a></h4><p>1、父工程引入</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micrometer-tracing.version</span><span class="token punctuation">&gt;</span></span>1.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micrometer-tracing.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micrometer-observation.version</span><span class="token punctuation">&gt;</span></span>1.12.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micrometer-observation.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>feign-micrometer.version</span><span class="token punctuation">&gt;</span></span>12.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>feign-micrometer.version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zipkin-reporter-brave.version</span><span class="token punctuation">&gt;</span></span>2.17.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zipkin-reporter-brave.version</span><span class="token punctuation">&gt;</span></span>\n\n\n\n\n<span class="token comment">&lt;!--micrometer-tracing-bom导入链路追踪版本中心  1--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.micrometer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>micrometer-tracing-bom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${micrometer-tracing.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--micrometer-tracing指标追踪  2--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.micrometer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>micrometer-tracing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${micrometer-tracing.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--micrometer-tracing-bridge-brave适配zipkin的桥接包 3--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.micrometer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>micrometer-tracing-bridge-brave<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${micrometer-tracing.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--micrometer-observation 4--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.micrometer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>micrometer-observation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${micrometer-observation.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--feign-micrometer 5--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>feign-micrometer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${feign-micrometer.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--zipkin-reporter-brave 6--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.zipkin.reporter2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>zipkin-reporter-brave<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${zipkin-reporter-brave.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、子工程引入以下五个即可</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>        <span class="token comment">&lt;!--micrometer-tracing指标追踪  1--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.micrometer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>micrometer-tracing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--micrometer-tracing-bridge-brave适配zipkin的桥接包 2--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.micrometer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>micrometer-tracing-bridge-brave<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--micrometer-observation 3--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.micrometer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>micrometer-observation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--feign-micrometer 4--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>feign-micrometer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--zipkin-reporter-brave 5--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.zipkin.reporter2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>zipkin-reporter-brave<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、配置，哪个服务需要监控就配置哪个服务！</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment"># ========================zipkin===================</span>\n<span class="token key atrule">management</span><span class="token punctuation">:</span>\n    <span class="token key atrule">zipkin</span><span class="token punctuation">:</span>\n        <span class="token key atrule">tracing</span><span class="token punctuation">:</span>\n            <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>9411/api/v2/spans\n    <span class="token key atrule">tracing</span><span class="token punctuation">:</span>\n        <span class="token key atrule">sampling</span><span class="token punctuation">:</span>\n            <span class="token key atrule">probability</span><span class="token punctuation">:</span> <span class="token number">1.0</span> <span class="token comment">#采样率默认为0.1(0.1就是10次只能有一次被记录下来)，值越大收集越及时。</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、gateway-网关" tabindex="-1"><a class="header-anchor" href="#六、gateway-网关"><span>六、Gateway 网关</span></a></h2><blockquote><p><strong>什么是网关？</strong></p></blockquote><p>网关的角色是作为一个 API 架构，用来保护、增强和控制对于 API 服务的访问</p><blockquote><p><strong>GateWay 和 Nginx都作为网关，有什么区别？</strong></p></blockquote><figure><img src="'+z+'" alt="image-20240405215124906" tabindex="0" loading="lazy"><figcaption>image-20240405215124906</figcaption></figure><p>通常可以将Nginx至于 Gateway 网关前，负责对 Gateway 网关的负载均衡，然后再由网关决定进入根据判定到哪个真实的web 服务器。 让两者的分工更加明确，也就是：<strong>Gateway 网关聚合服务，Nginx请求转发</strong></p><h3 id="_6-1-gateway-三大核心" tabindex="-1"><a class="header-anchor" href="#_6-1-gateway-三大核心"><span>6.1 Gateway 三大核心</span></a></h3>',14),ts=(0,t.Lk)("li",null,[(0,t.Lk)("strong",null,"Route（路由）"),(0,t.eW)(": 路由是构建网关的基本模块，它由ID，目标URI，一系列的断言和过滤器组成，如果断言为true则匹配该路由")],-1),ps=(0,t.Lk)("li",null,[(0,t.Lk)("strong",null,"Predicate（谓词）"),(0,t.eW)(": 参考的是Java8的 "),(0,t.Lk)("code",null,"java.util.function.Predicate"),(0,t.eW)(" 开发人员可以匹配HTTP请求中的所有内容(例如请求头或请求参数)，如果请求与断言相匹配则进行路由")],-1),es=(0,t.Lk)("strong",null,"Filter（过滤器）",-1),cs={href:"https://github.com/spring-cloud/spring-cloud-gateway/tree/main/spring-cloud-gateway-server/src/main/java/org/springframework/cloud/gateway/filter/GatewayFilter.java",target:"_blank",rel:"noopener noreferrer"},os=(0,t.Lk)("code",null,"GatewayFilter",-1),ls=(0,t.Fv)('<p><strong>工作流程：</strong></p><figure><img src="'+G+'" alt="Spring Cloud Gateway Diagram" tabindex="0" loading="lazy"><figcaption>Spring Cloud Gateway Diagram</figcaption></figure><ul><li>客户端向 <code>Spring Cloud Gateway</code> 发出请求。</li><li>如果 <code>Gateway Handler Mapping</code> 找到与请求相匹配的路由，将其发送到 <code>Gateway Web Handler</code>。</li><li>Handler 再通过指定的 <strong>过滤器链</strong> 来将请求发送到我们实际的服务执行业务逻辑，然后返回。</li><li>过滤器之间用虚线分开是因为过滤器可能会在发送代理请求之前（“pre”）或之后（“post”）执行业务逻辑。</li></ul><blockquote><p>核心就是： <code>Gateway Handler Mapping</code> 、<code>Gateway Web Handler</code>、<code>Fileter Chian</code></p><p>有点类似于SpringMVC的执行流程</p></blockquote><h3 id="_6-2-简单配置" tabindex="-1"><a class="header-anchor" href="#_6-2-简单配置"><span>6.2 简单配置</span></a></h3><blockquote><p>网关也是一个单独的服务模块，因此需要单独的创建 <code>网关模块</code></p></blockquote><p>1、创建网关服务模块</p><figure><img src="'+H+'" alt="image-20240405220811768" tabindex="0" loading="lazy"><figcaption>image-20240405220811768</figcaption></figure><p>2、POM</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--gateway--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--服务注册发现consul discovery,网关也要注册进服务注册中心统一管控--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-consul-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- 指标监控健康检查的actuator,网关是响应式编程删除掉spring-boot-starter-web dependency--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、yaml</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>\n    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9527</span>\n\n<span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">application</span><span class="token punctuation">:</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>gateway <span class="token comment">#以微服务注册进consul或nacos服务列表内</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n        <span class="token key atrule">consul</span><span class="token punctuation">:</span> <span class="token comment">#配置consul地址</span>\n            <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost\n            <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8500</span>\n            <span class="token key atrule">discovery</span><span class="token punctuation">:</span>\n                <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n                <span class="token key atrule">service-name</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span>\n                \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n<span class="token comment">#路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 <span class="token comment">#pay_routh1       </span>\n\t\t\t\t <span class="token comment"># 路由地址：lb表示负载均衡LoadBalance</span>\n                 <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token comment"># 断言，路径相匹配的进行路由</span>\n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n                      <span class="token punctuation">-</span> Path=/pay/gateway/get/<span class="token important">**</span>              \n                \n                \n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh2 <span class="token comment">#pay_routh2                </span>\n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service           \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n                      <span class="token punctuation">-</span> Path=/pay/gateway/info/<span class="token important">**</span>            \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、启动类</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@EnableDiscoveryClient</span>\n<span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main9527</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Main9527</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>此时访问 9527 端口，网关就能够替我们转发到 <code>8001</code> 端口</p></blockquote><h3 id="_6-3-高级特性" tabindex="-1"><a class="header-anchor" href="#_6-3-高级特性"><span>6.3 高级特性</span></a></h3><h4 id="_6-3-1-predicate断言" tabindex="-1"><a class="header-anchor" href="#_6-3-1-predicate断言"><span>6.3.1 Predicate断言</span></a></h4>',17),is={class:"hint-container tip"},us=(0,t.Lk)("p",{class:"hint-container-title"},"中文文档",-1),ks={href:"https://springdoc.cn/spring-cloud-gateway/",target:"_blank",rel:"noopener noreferrer"},ds=(0,t.Fv)('<p><strong>GateWay自带的RoutePredicateFactory</strong></p><figure><img src="'+U+'" alt="image-20240406093526625" tabindex="0" loading="lazy"><figcaption>image-20240406093526625</figcaption></figure><p>Spring Cloud Gateway将路由匹配作为Spring WebFlux <code>HandlerMapping</code> 基础设施的一部分。Spring Cloud Gateway包括许多内置的 <code>RoutePredicateFactory</code>。所有这些<code>Predicate</code>都与HTTP请求的不同属性相匹配。你可以用逻辑 <code>and</code> 语句组合多个RoutePredicateFactory。</p><p>有两种方式来配置谓词和过滤器：<code>快捷方式</code>和<code>完全展开</code>的参数</p><ul><li><strong>快捷方式</strong>：过滤器名称（filter name）后面跟一个等号 (<code>=</code>)，然后是用逗号 (<code>,</code>) 分隔的参数值。</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n      <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> after_route\n        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org\n        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> Cookie=mycookie<span class="token punctuation">,</span>mycookievalue\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>完全展开</strong>：完全展开的参数看起来更像标准的yaml配置，有名称/值对。一般来说，会有一个 <code>name</code> key和一个 <code>args</code> key。<code>args</code> key是一个键值对的映射，用于配置谓词或过滤器。</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n      <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> after_route\n        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org\n        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Cookie\n          <span class="token key atrule">args</span><span class="token punctuation">:</span>\n            <span class="token key atrule">name</span><span class="token punctuation">:</span> mycookie\n            <span class="token key atrule">regexp</span><span class="token punctuation">:</span> mycookievalue\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-after、before、between" tabindex="-1"><a class="header-anchor" href="#_1-after、before、between"><span>（1）After、Before、Between</span></a></h5><p>以下三个表示匹配在指定日期之后、之前、之间的请求，均是 <code>java ZonedDateTime</code> 格式</p><ul><li><code>After</code>：在指定日期之后</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n      <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> after_route\n        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org\n        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n         <span class="token punctuation">-</span> After=2024<span class="token punctuation">-</span>04<span class="token punctuation">-</span>06T10<span class="token punctuation">:</span>15<span class="token punctuation">:</span>38.866925800+08<span class="token punctuation">:</span>00<span class="token punctuation">[</span>Asia/Shanghai<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Before</code>:</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n                      <span class="token punctuation">-</span> Before=2024<span class="token punctuation">-</span>04<span class="token punctuation">-</span>06T10<span class="token punctuation">:</span>42<span class="token punctuation">:</span>38.866925800+08<span class="token punctuation">:</span>00<span class="token punctuation">[</span>Asia/Shanghai<span class="token punctuation">]</span>   <span class="token comment"># 在指定时间之前</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Between</code>:</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        \n                      <span class="token punctuation">-</span> Between=2024<span class="token punctuation">-</span>04<span class="token punctuation">-</span>06T10<span class="token punctuation">:</span>22<span class="token punctuation">:</span>38.866925800+08<span class="token punctuation">:</span>00<span class="token punctuation">[</span>Asia/Shanghai<span class="token punctuation">]</span><span class="token punctuation">,</span>2024<span class="token punctuation">-</span>04<span class="token punctuation">-</span>06T10<span class="token punctuation">:</span>27<span class="token punctuation">:</span>38.866925800+08<span class="token punctuation">:</span>00<span class="token punctuation">[</span>Asia/Shanghai<span class="token punctuation">]</span> \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若不符合 <code>predicates</code> ：</p><figure><img src="'+W+'" alt="image-20240406102807150" tabindex="0" loading="lazy"><figcaption>image-20240406102807150</figcaption></figure><h5 id="_2-cookie、header、host、path" tabindex="-1"><a class="header-anchor" href="#_2-cookie、header、host、path"><span>（2）Cookie、Header、HOST、PATH</span></a></h5><p><code>Cookie</code>：匹配具有给定名称且其值符合正则表达式的<code>cookie</code></p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        \n                       <span class="token punctuation">-</span> Cookie=username<span class="token punctuation">,</span><span class="token number">123</span>  <span class="token comment"># 指定Cookie</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Header</code>：与具有给定名称且其值与正则表达式相匹配的 <code>header</code> 匹配</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>        \n                  <span class="token comment"># Header中带有X-Request-Id为整数才可访问</span>\n                       <span class="token punctuation">-</span> Header=X<span class="token punctuation">-</span>Request<span class="token punctuation">-</span>Id<span class="token punctuation">,</span> \\d+ \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>HOST</code>: 一个主机（Host）名称的 <code>patterns</code> 列表。该pattern是Ant风格的模式，以 <code>.</code> 为分隔符。这个谓词匹配符合该pattern的Host header</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>     \n                  <span class="token comment"># 参数中带有：以HOST为name，value符合**.atguigu.com</span>\n                      <span class="token punctuation">-</span> Host=<span class="token important">**.atguigu.com</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试</strong></p><figure><img src="'+V+'" alt="image-20240406110445918" tabindex="0" loading="lazy"><figcaption>image-20240406110445918</figcaption></figure><p><code>PATH</code>: 路径匹配</p><h5 id="_3-query" tabindex="-1"><a class="header-anchor" href="#_3-query"><span>(3) Query</span></a></h5><p><code>Query</code> 路由谓词工厂需要两个参数：一个必需的 <code>param</code> 和一个可选的 <code>regexp</code>（这是一个Java正则表达式）。下面的例子配置了一个 query 路由谓词。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>     \n                   <span class="token comment"># 参数中必须带有username且值是整数</span>\n                     <span class="token punctuation">-</span> Query=username<span class="token punctuation">,</span> \\d+ \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试</strong>：</p><figure><img src="'+$+'" alt="image-20240406110126338" tabindex="0" loading="lazy"><figcaption>image-20240406110126338</figcaption></figure><h5 id="_4-remoteaddr" tabindex="-1"><a class="header-anchor" href="#_4-remoteaddr"><span>（4）RemoteAddr</span></a></h5><p><code>RemoteAddr</code> 路由谓词工厂接受一个 <code>sources</code> 集合（最小长度为1），它是CIDR注解（IPv4或IPv6）字符串，如 <code>192.168.0.1/16</code>（其中 <code>192.168.0.1</code> 是一个IP地址，<code>16</code> 是一个子网掩码）</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>     \n                  <span class="token comment"># 外部访问我的IP限制，最大跨度不超过32，目前是1~24它们是 CIDR 表示法。</span>\n                     <span class="token punctuation">-</span> RemoteAddr=192.168.124.1/24 \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>CIDR 使用了更灵活的方式来表示 IP 地址和子网掩码，而不是简单地将它们分成几个固定的类别。CIDR 地址由 IP 地址和一个后缀表示，后缀通常用斜杠（/）后面跟着一个数字表示子网掩码的位数。例如，<code>192.168.1.0/24</code> 表示一个拥有 24 位子网掩码的网络。</p><p>例如：</p><p><code>192.168.1.0/30</code></p><p>有30位用于网络地址和子网掩码，剩下的2位用于主机地址。所以可用的主机地址数是2的幂次方，即2^2 = 4</p><p>这四个IP地址包括网络地址、广播地址和两个可用的主机地址。网络地址和广播地址分别是每个子网的第一个和最后一个地址，因此对于CIDR地址 <code>192.168.1.0/30</code>：</p><ul><li>网络地址是 <code>192.168.1.0</code></li><li>第一个主机地址是 <code>192.168.1.1</code></li><li>第二个主机地址是 <code>192.168.1.2</code></li><li>广播地址是 <code>192.168.1.3</code></li></ul></blockquote><h5 id="_5-methods" tabindex="-1"><a class="header-anchor" href="#_5-methods"><span>（5）Methods</span></a></h5><p><code>Method</code> 路由谓词工厂接受一个 <code>methods</code> 参数，它是一个或多个参数：要匹配的HTTP方法。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>     \n                     <span class="token punctuation">-</span> Method=GET<span class="token punctuation">,</span>POST\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-自定义predicate断言" tabindex="-1"><a class="header-anchor" href="#_6-自定义predicate断言"><span>（6）自定义Predicate断言</span></a></h5><blockquote><p>需求: 希望用一个 userType 字段来描述用户的会员等级(diamonds, gold, silver)。</p><p>在配置文件中可以配置哪种等级的会员可以访问</p></blockquote><p>先来看看，GateWay中原有Predicate是怎么写的</p><ul><li>创建一个 <code>XXXRoutePredicateFactory</code> 类，注意后缀必须是 <code>RoutePredicateFactory</code>, 前面无所谓</li><li>继承 <code>AbstractRoutePredicateFactory&lt;Config&gt;</code> 抽象类或者实现 <code>RoutePredicateFactory&lt;C&gt;</code> 接口</li><li>自定义的 <code>XXXRoutePredicateFactory</code> 类中包含4部分： <ul><li><code>空参构造器</code>： 调用父类的构造器</li><li><code>Config配置类</code> : 说明要校验的参数，，在本案例中也就是 <code>userType</code></li><li><code>apply方法</code>： 具体的校验过程</li><li><code>shortcutFieldOrder</code>: 实现快捷方式，若不实现此方法，只能够使用<code>完全展开</code>的配置方式</li></ul></li></ul><figure><img src="'+X+'" alt="image-20240406114040874" tabindex="0" loading="lazy"><figcaption>image-20240406114040874</figcaption></figure><p><strong>示例代码</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRoutePredicateFactory</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractRoutePredicateFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyRoutePredicateFactory<span class="token punctuation">.</span>Config</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n    <span class="token comment">// 1、空参构造器，调用父类的构造器</span>\n    <span class="token keyword">public</span> <span class="token class-name">MyRoutePredicateFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">MyRoutePredicateFactory<span class="token punctuation">.</span>Config</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token comment">//  2、配置类</span>\n    <span class="token annotation punctuation">@Validated</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>\n        <span class="token annotation punctuation">@Getter</span><span class="token annotation punctuation">@Setter</span><span class="token annotation punctuation">@NotEmpty</span>\n        <span class="token keyword">private</span> <span class="token class-name">String</span> userType<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 3、具体的校验规则</span>\n    <span class="token keyword">public</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServerWebExchange</span><span class="token punctuation">&gt;</span></span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">MyRoutePredicateFactory<span class="token punctuation">.</span>Config</span> config<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">GatewayPredicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token annotation punctuation">@Override</span>\n            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> serverWebExchange<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">//  获取请求参数中的第一个参数</span>\n                <span class="token class-name">String</span> userType <span class="token operator">=</span> serverWebExchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token string">&quot;userType&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">//  若为null返回false</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtil</span><span class="token punctuation">.</span><span class="token function">isNullOrEmpty</span><span class="token punctuation">(</span>userType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n                <span class="token comment">// 请求参数中的userTYpe与配置的userType相等，则返回true</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>userType<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getUserType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token comment">//  4、快捷方式</span>\n    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">shortcutFieldOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token string">&quot;userType&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，将网关模块重新启动，在控制台可以看见自定义的断言工厂：</p><figure><img src="'+J+'" alt="image-20240406120715377" tabindex="0" loading="lazy"><figcaption>image-20240406120715377</figcaption></figure><p>接下来就可以配置使用了：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>     \n                     <span class="token punctuation">-</span> My=diamonds <span class="token comment"># 自定义的断言，请求参数中的userType=diamonds</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-3-2-filter过滤器" tabindex="-1"><a class="header-anchor" href="#_6-3-2-filter过滤器"><span>6.3.2 Filter过滤器</span></a></h4><p>和 SpringMVC 中的拦截器，Servlet中的过滤器一个意思</p><p><strong>能干嘛</strong>：</p><ul><li>请求鉴权</li><li>异常处理</li><li><strong>记录接口调用时长统计</strong></li></ul><p><strong>类型</strong></p><ul><li><code>GatewayFilter </code>：全局过滤器</li><li><code>GlobalFilter</code>： 单一内置的过滤器</li><li><code>自定义过滤器</code></li></ul><h5 id="_1-请求头相关" tabindex="-1"><a class="header-anchor" href="#_1-请求头相关"><span>（1）请求头相关</span></a></h5><p><code>AddRequestHeader</code> : 需要一个 <code>name</code> 和 <code>value</code> 参数，增加到请求头中</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n                      <span class="token punctuation">-</span> Path=/pay/gateway/filter/<span class="token important">**</span>             \n                  <span class="token key atrule">filters</span><span class="token punctuation">:</span>\n                  <span class="token comment"># 请求头kv，若一头含有多参则重写一行设置</span>\n                      <span class="token punctuation">-</span> AddRequestHeader=X<span class="token punctuation">-</span>Request<span class="token punctuation">-</span>atguigu1<span class="token punctuation">,</span>atguiguValue1  \n                      <span class="token punctuation">-</span> AddRequestHeader=X<span class="token punctuation">-</span>Request<span class="token punctuation">-</span>atguigu2<span class="token punctuation">,</span>atguiguValue2\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>RemoveRequestHeader</code>:需要一个 <code>name</code> 参数。它是要被删除的header的名称</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n                      <span class="token punctuation">-</span> Path=/pay/gateway/filter/<span class="token important">**</span>             \n                  <span class="token key atrule">filters</span><span class="token punctuation">:</span>\n                      <span class="token punctuation">-</span>  RemoveRequestHeader=sec<span class="token punctuation">-</span>fetch<span class="token punctuation">-</span>site      <span class="token comment"># 删除请求头sec-fetch-site</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SetRequestHeader</code>:接受 <code>name</code> 和 <code>value</code> 参数, 根据name修改成为 value</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n                      <span class="token punctuation">-</span> Path=/pay/gateway/filter/<span class="token important">**</span>             \n                  <span class="token key atrule">filters</span><span class="token punctuation">:</span>\n                      <span class="token punctuation">-</span>  SetRequestHeader=sec<span class="token punctuation">-</span>fetch<span class="token punctuation">-</span>mode<span class="token punctuation">,</span> Blue<span class="token punctuation">-</span>updatebyzzyy <span class="token comment"># 将请求头sec-fetch-mode对应的值修改为Blue-updatebyzzyy</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-请求参数相关" tabindex="-1"><a class="header-anchor" href="#_2-请求参数相关"><span>（2）请求参数相关</span></a></h5><p><code>AddRequestParameter</code> : 需要一个 <code>name</code> 和 <code>value</code> 参数, 增加请求参数</p><p><code>RemoveRequestParameter</code> ： 需要一个 <code>name</code> 参数。它是要删除的查询参数的名称</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cloud</span><span class="token punctuation">:</span> \n        <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n            <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n                <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> pay_routh1 \n                  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service            \n                  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n                      <span class="token punctuation">-</span> Path=/pay/gateway/filter/<span class="token important">**</span>             \n                  <span class="token key atrule">filters</span><span class="token punctuation">:</span>\n                  <span class="token comment"># 新增请求参数Parameter：k ，v</span>\n                    <span class="token punctuation">-</span> AddRequestParameter=customerId<span class="token punctuation">,</span><span class="token number">9527001</span> \n                    <span class="token comment"># 删除url请求参数customerName，你传递过来也是null</span>\n                    <span class="token punctuation">-</span> RemoveRequestParameter=customerName   \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-回应头相关" tabindex="-1"><a class="header-anchor" href="#_3-回应头相关"><span>（3）回应头相关</span></a></h5><p><code>AddResponseHeader</code> : 需要一个 <code>name</code> 和 <code>value</code>增加回应头，</p><p><code>RemoveResponseHeader</code>需要一个 <code>name</code> 参数。它是要被移除的 header 的名称</p><p><code>SetResponseHeader</code> 接受 <code>name</code> 和 <code>value</code> 参数 ,修改名称为 <code>name</code> 的回应头</p><h5 id="_4-前缀和路径相关" tabindex="-1"><a class="header-anchor" href="#_4-前缀和路径相关"><span>（4）前缀和路径相关</span></a></h5><p><code>PrefixPath</code> : 自动添加路径前缀, 下面这个例子把 <code>/mypath</code> 作为所有匹配请求的路径的前缀</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n      <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span>  pay_routh1 \n        <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>payment<span class="token punctuation">-</span>service    \n        <span class="token key atrule">filters</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> PrefixPath=/mypath\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SetPath：</code>修改路径，接受一个路径模板参数。它提供了一种简单的方法，通过允许模板化的路径段来操作请求路径</p><p>对于请求路径为 <code>/red/blue</code> 的情况，在进行下行请求之前，将路径设置为 <code>/blue</code>。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n      <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> setpath_route\n        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org\n        <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> Path=/red/<span class="token punctuation">{</span>segment<span class="token punctuation">}</span>\n        <span class="token key atrule">filters</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> SetPath=/<span class="token punctuation">{</span>segment<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>RedirectTo </code>需要两个参数，<code>status</code> 和 <code>url</code>。<code>status</code> 参数应该是一个300系列的重定向 HTTP 状态码，如301。<code>url</code> 参数应该是一个有效的URL</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n      <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> prefixpath_route\n        <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.org\n        <span class="token key atrule">filters</span><span class="token punctuation">:</span>\n         <span class="token punctuation">-</span> RedirectTo=302<span class="token punctuation">,</span> http<span class="token punctuation">:</span>//www.atguigu.com/ \n         <span class="token comment"># 访问http://localhost:9527/pay/gateway/filter跳转到http://www.atguigu.com/</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-自定义全局过滤器" tabindex="-1"><a class="header-anchor" href="#_5-自定义全局过滤器"><span>（5）自定义全局过滤器</span></a></h5><blockquote><p><strong>需求</strong>：统计所有接口调用耗时</p><p><strong>解决方法</strong>：自定义过滤器</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>\n<span class="token annotation punctuation">@Slf4j</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyGlobalFilter</span> <span class="token keyword">implements</span> <span class="token class-name">GlobalFilter</span><span class="token punctuation">,</span> <span class="token class-name">Ordered</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * 数字越小优先级越高\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">BEGIN_VISIT_TIME</span> <span class="token operator">=</span> <span class="token string">&quot;begin_visit_time&quot;</span><span class="token punctuation">;</span><span class="token comment">//开始访问时间</span>\n    <span class="token doc-comment comment">/**\n     *第2版，各种统计\n     * <span class="token keyword">@param</span> <span class="token parameter">exchange</span>\n     * <span class="token keyword">@param</span> <span class="token parameter">chain</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//先记录下访问接口的开始时间</span>\n        exchange<span class="token punctuation">.</span><span class="token function">getAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">BEGIN_VISIT_TIME</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">fromRunnable</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>\n            <span class="token class-name">Long</span> beginVisitTime <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token constant">BEGIN_VISIT_TIME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>beginVisitTime <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;访问接口主机: &quot;</span> <span class="token operator">+</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;访问接口端口: &quot;</span> <span class="token operator">+</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;访问接口URL: &quot;</span> <span class="token operator">+</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;访问接口URL参数: &quot;</span> <span class="token operator">+</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRawQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;访问接口时长: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> beginVisitTime<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;ms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;我是美丽分割线: ###################################################&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-自定义单一内置过滤器" tabindex="-1"><a class="header-anchor" href="#_6-自定义单一内置过滤器"><span>（6）自定义单一内置过滤器</span></a></h5><blockquote><p>上面是全局过滤器，只要发送请求就会执行</p><p>下面定义单一内置过滤器</p></blockquote><p>先看看GateWay原厂的过滤器如何实现：</p><blockquote><p>看源码其实能看出来，和自定义Predicate非常相似。</p></blockquote><ul><li>创建 <code>XXXGatewayFilterFactory</code>, 后缀必须是 <code>GatewayFilterFactory</code>, 前面无所谓</li><li>继承 <code>AbstractGatewayFilterFactory&lt;Config&gt;</code> 抽象类或者实现 <code>GatewayFilterFactory&lt;C&gt;</code> 接口</li><li>自定义的 <code>XXXGatewayFilterFactory</code> 类中包含4部分： <ul><li><code>空参构造器</code>： 调用父类的构造器</li><li><code>Config配置类</code> : 说明要校验的参数</li><li><code>apply方法</code>： 具体的校验过程</li><li><code>shortcutFieldOrder</code>: 实现快捷方式，若不实现此方法，只能够使用<code>完全展开</code>的配置方式</li></ul></li></ul><figure><img src="'+K+'" alt="image-20240406170813435" tabindex="0" loading="lazy"><figcaption>image-20240406170813435</figcaption></figure><p><strong>代码</strong></p><blockquote><p>判断请求参数中是否包含：<code>atguigu</code> , 不包含直接返回<code>400</code></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyGatewayFilterFactory</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractGatewayFilterFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Config</span><span class="token punctuation">&gt;</span></span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token class-name">MyGatewayFilterFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">MyGatewayFilterFactory<span class="token punctuation">.</span>Config</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">GatewayFilter</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">MyGatewayFilterFactory<span class="token punctuation">.</span>Config</span> config<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">GatewayFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            <span class="token annotation punctuation">@Override</span>\n            <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span>\n            <span class="token punctuation">{</span>\n                <span class="token class-name">ServerHttpRequest</span> request <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;进入了自定义网关过滤器MyGatewayFilterFactory，status：&quot;</span><span class="token operator">+</span>config<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token string">&quot;atguigu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n                    exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStatusCode</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">return</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">shortcutFieldOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Config</span>\n    <span class="token punctuation">{</span>\n        <span class="token annotation punctuation">@Getter</span>\n        <span class="token annotation punctuation">@Setter</span>\n        <span class="token keyword">private</span> <span class="token class-name">String</span> status<span class="token punctuation">;</span><span class="token comment">//设定一个状态值/标志位，它等于多少，匹配和才可以访问</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//单一内置过滤器GatewayFilter</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>配置</strong></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>spring:\n  cloud:\n    gateway:\n      routes:\n      - id: prefixpath_route\n        uri: https://example.org\n        filters:\n          - My=atguigu\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1>',95),rs={},gs=(0,a(66262).A)(rs,[["render",function(n,s){const a=(0,t.g2)("ExternalLinkIcon");return(0,t.uX)(),(0,t.CE)("div",null,[Z,(0,t.Lk)("div",Y,[Q,nn,sn,(0,t.Lk)("p",null,[(0,t.Lk)("a",an,[(0,t.eW)("https://github.com/yangzhaoguang/cloud2024.git"),(0,t.bF)(a)])])]),tn,pn,en,(0,t.Lk)("div",cn,[on,(0,t.Lk)("p",null,[(0,t.eW)("以下为详细的搭建流程，若嫌麻烦 可以接 clone 我的代码，回退到 "),ln,(0,t.eW)(" 即可！！ "),(0,t.Lk)("a",un,[(0,t.eW)("https://github.com/yangzhaoguang/cloud2024.git"),(0,t.bF)(a)])])]),kn,(0,t.Lk)("blockquote",null,[(0,t.Lk)("p",null,[(0,t.eW)("官网："),(0,t.Lk)("a",dn,[(0,t.eW)("https://github.com/abel533/Mapper"),(0,t.bF)(a)])])]),rn,(0,t.Lk)("details",gn,[vn,(0,t.Lk)("p",null,[(0,t.Lk)("a",mn,[(0,t.eW)("https://www.consul.io/downloads.html"),(0,t.bF)(a)])]),bn,(0,t.Lk)("p",null,[(0,t.Lk)("a",yn,[(0,t.eW)("http://localhost:8500"),(0,t.bF)(a)])])]),fn,(0,t.Lk)("div",hn,[wn,(0,t.Lk)("p",null,[(0,t.Lk)("a",qn,[(0,t.eW)("https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#spring-cloud-loadbalancer"),(0,t.bF)(a)])])]),In,(0,t.Lk)("div",xn,[Cn,(0,t.Lk)("p",null,[(0,t.Lk)("a",_n,[(0,t.eW)("https://github.com/spring-cloud/spring-cloud-openfeign"),(0,t.bF)(a)])])]),Rn,(0,t.Lk)("div",Sn,[jn,(0,t.Lk)("p",null,[(0,t.Lk)("a",Tn,[(0,t.eW)("https://github.com/lmhmhl/Resilience4j-Guides-Chinese/blob/main/core-modules/CircuitBreaker.md"),(0,t.bF)(a)])])]),Pn,(0,t.Lk)("p",null,[(0,t.eW)("正常的请求："),(0,t.Lk)("a",Ln,[(0,t.eW)("localhost/feign/pay/circuit/1"),(0,t.bF)(a)])]),(0,t.Lk)("p",null,[(0,t.eW)("错误的请求："),(0,t.Lk)("a",En,[(0,t.eW)("localhost/feign/pay/circuit/-4"),(0,t.bF)(a)])]),Fn,(0,t.Lk)("div",Mn,[On,(0,t.Lk)("p",null,[(0,t.Lk)("a",An,[(0,t.eW)("https://github.com/lmhmhl/Resilience4j-Guides-Chinese/blob/main/core-modules/bulkhead.md"),(0,t.bF)(a)])])]),Dn,Bn,Nn,zn,(0,t.Lk)("blockquote",null,[(0,t.Lk)("p",null,[(0,t.eW)("这个和"),(0,t.Lk)("a",Gn,[(0,t.eW)("JUC"),(0,t.bF)(a)]),(0,t.eW)("中的 Semaphore 原理是一样的。")]),Hn]),Un,(0,t.Lk)("blockquote",null,[(0,t.Lk)("p",null,[(0,t.eW)("这个和"),(0,t.Lk)("a",Wn,[(0,t.eW)("JUC"),(0,t.bF)(a)]),(0,t.eW)(" 中的 ThreadPool 原理是一样的。")])]),Vn,(0,t.Lk)("div",$n,[Xn,(0,t.Lk)("p",null,[(0,t.Lk)("a",Jn,[(0,t.eW)("https://github.com/lmhmhl/Resilience4j-Guides-Chinese/blob/main/core-modules/ratelimiter.md"),(0,t.bF)(a)])])]),Kn,(0,t.Lk)("p",null,[(0,t.Lk)("a",Zn,[(0,t.eW)("https://zipkin.io/pages/quickstart"),(0,t.bF)(a)])]),Yn,Qn,ns,(0,t.Lk)("p",null,[(0,t.Lk)("a",ss,[(0,t.eW)("http://localhost:9411/zipkin/"),(0,t.bF)(a)])]),as,(0,t.Lk)("ul",null,[ts,ps,(0,t.Lk)("li",null,[es,(0,t.eW)(": 这些是 "),(0,t.Lk)("a",cs,[os,(0,t.bF)(a)]),(0,t.eW)(" 的实例，已经用特定工厂构建。在这里，你可以在发送下游请求之前或之后修改请求和响应。")])]),ls,(0,t.Lk)("div",is,[us,(0,t.Lk)("p",null,[(0,t.Lk)("a",ks,[(0,t.eW)("https://springdoc.cn/spring-cloud-gateway/"),(0,t.bF)(a)])])]),ds])}]]),vs=JSON.parse('{"path":"/Microservices/SpringCloud.html","title":"SpringCloud","lang":"zh-CN","frontmatter":{"date":"2024-03-28T00:00:00.000Z","category":["微服务"],"tag":["SpringCloud","Consul","GateWay","ZipKin","OpenFeign","Resilience4J"],"editLink":false,"pageview":false,"sticky":true,"star":true,"order":1,"description":"SpringCloud 提示 本文档只讲解微服务的基础使用,想要了解深层次的原理请跳过，避免耽误时间！！ 所有代码均在GitHub,需要请自取 https://github.com/yangzhaoguang/cloud2024.git 目前常用的组件： image-20240403150037397image-20240403150037397 一、...","head":[["meta",{"property":"og:url","content":"https://www.yzgc.top/Microservices/SpringCloud.html"}],["meta",{"property":"og:site_name","content":"鲨瓜"}],["meta",{"property":"og:title","content":"SpringCloud"}],["meta",{"property":"og:description","content":"SpringCloud 提示 本文档只讲解微服务的基础使用,想要了解深层次的原理请跳过，避免耽误时间！！ 所有代码均在GitHub,需要请自取 https://github.com/yangzhaoguang/cloud2024.git 目前常用的组件： image-20240403150037397image-20240403150037397 一、..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-09T03:26:57.000Z"}],["meta",{"property":"article:author","content":"鲨瓜"}],["meta",{"property":"article:tag","content":"SpringCloud"}],["meta",{"property":"article:tag","content":"Consul"}],["meta",{"property":"article:tag","content":"GateWay"}],["meta",{"property":"article:tag","content":"ZipKin"}],["meta",{"property":"article:tag","content":"OpenFeign"}],["meta",{"property":"article:tag","content":"Resilience4J"}],["meta",{"property":"article:published_time","content":"2024-03-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-09T03:26:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringCloud\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-09T03:26:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鲨瓜\\",\\"url\\":\\"https://www.yzgc.top\\"}]}"]]},"headers":[{"level":2,"title":"一、搭建示例项目","slug":"一、搭建示例项目","link":"#一、搭建示例项目","children":[{"level":3,"title":"1.1 环境搭建","slug":"_1-1-环境搭建","link":"#_1-1-环境搭建","children":[]},{"level":3,"title":"1.2 Mapper4一键生成","slug":"_1-2-mapper4一键生成","link":"#_1-2-mapper4一键生成","children":[]},{"level":3,"title":"1.3 新建支付模块","slug":"_1-3-新建支付模块","link":"#_1-3-新建支付模块","children":[]},{"level":3,"title":"1.4 解决时间格式、同一返回结果","slug":"_1-4-解决时间格式、同一返回结果","link":"#_1-4-解决时间格式、同一返回结果","children":[]},{"level":3,"title":"1.5 全局异常处理","slug":"_1-5-全局异常处理","link":"#_1-5-全局异常处理","children":[]},{"level":3,"title":"1.6 新建订单模块","slug":"_1-6-新建订单模块","link":"#_1-6-新建订单模块","children":[]},{"level":3,"title":"1.7 目前项目存在的问题","slug":"_1-7-目前项目存在的问题","link":"#_1-7-目前项目存在的问题","children":[]}]},{"level":2,"title":"二、Consul","slug":"二、consul","link":"#二、consul","children":[{"level":3,"title":"2.1 介绍、安装","slug":"_2-1-介绍、安装","link":"#_2-1-介绍、安装","children":[]},{"level":3,"title":"2.2 服务注册","slug":"_2-2-服务注册","link":"#_2-2-服务注册","children":[]},{"level":3,"title":"2.3 小问题","slug":"_2-3-小问题","link":"#_2-3-小问题","children":[]},{"level":3,"title":"2.4 分布式配置","slug":"_2-4-分布式配置","link":"#_2-4-分布式配置","children":[]},{"level":3,"title":"2.5 动态刷新","slug":"_2-5-动态刷新","link":"#_2-5-动态刷新","children":[]},{"level":3,"title":"2.6 配置持久化","slug":"_2-6-配置持久化","link":"#_2-6-配置持久化","children":[]}]},{"level":2,"title":"三、服务调用","slug":"三、服务调用","link":"#三、服务调用","children":[{"level":3,"title":"3.1 LoadBalance","slug":"_3-1-loadbalance","link":"#_3-1-loadbalance","children":[]},{"level":3,"title":"3.2 OpenFeign","slug":"_3-2-openfeign","link":"#_3-2-openfeign","children":[]}]},{"level":2,"title":"四、熔断降级","slug":"四、熔断降级","link":"#四、熔断降级","children":[{"level":3,"title":"4.1 概念介绍","slug":"_4-1-概念介绍","link":"#_4-1-概念介绍","children":[]},{"level":3,"title":"4.2 Resilience4J","slug":"_4-2-resilience4j","link":"#_4-2-resilience4j","children":[]}]},{"level":2,"title":"五、分布式链路追踪","slug":"五、分布式链路追踪","link":"#五、分布式链路追踪","children":[{"level":3,"title":"5.1 Micrometer + Zipkin","slug":"_5-1-micrometer-zipkin","link":"#_5-1-micrometer-zipkin","children":[]}]},{"level":2,"title":"六、Gateway 网关","slug":"六、gateway-网关","link":"#六、gateway-网关","children":[{"level":3,"title":"6.1 Gateway 三大核心","slug":"_6-1-gateway-三大核心","link":"#_6-1-gateway-三大核心","children":[]},{"level":3,"title":"6.2 简单配置","slug":"_6-2-简单配置","link":"#_6-2-简单配置","children":[]},{"level":3,"title":"6.3 高级特性","slug":"_6-3-高级特性","link":"#_6-3-高级特性","children":[]}]}],"git":{"createdTime":1712633217000,"updatedTime":1712633217000,"contributors":[{"name":"“杨照光”","email":"“yangzhaoguang@ciictec.com”","commits":1}]},"readingTime":{"minutes":45.98,"words":13794},"filePathRelative":"Microservices/SpringCloud.md","localizedDate":"2024年3月28日","excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>本文档只讲解微服务的基础使用,想要了解深层次的原理请跳过，避免耽误时间！！</p>\\n<p>所有代码均在GitHub,需要请自取</p>\\n<p><a href=\\"https://github.com/yangzhaoguang/cloud2024.git\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/yangzhaoguang/cloud2024.git</a></p>\\n</div>","autoDesc":true}')}}]);